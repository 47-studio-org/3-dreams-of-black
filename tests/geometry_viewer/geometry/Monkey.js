var Monkey = function () {

	var scope = this;

	THREE.Geometry.call(this);

	v( 0.437500, 0.765625, -0.164062 );
	v( -0.437500, 0.765625, -0.164062 );
	v( 0.500000, 0.687500, -0.093750 );
	v( -0.500000, 0.687500, -0.093750 );
	v( 0.546875, 0.578125, -0.054688 );
	v( -0.546875, 0.578125, -0.054688 );
	v( 0.351562, 0.617188, 0.023438 );
	v( -0.351562, 0.617188, 0.023438 );
	v( 0.351562, 0.718750, -0.031250 );
	v( -0.351562, 0.718750, -0.031250 );
	v( 0.351562, 0.781250, -0.132812 );
	v( -0.351562, 0.781250, -0.132812 );
	v( 0.273438, 0.796875, -0.164062 );
	v( -0.273438, 0.796875, -0.164062 );
	v( 0.203125, 0.742188, -0.093750 );
	v( -0.203125, 0.742188, -0.093750 );
	v( 0.156250, 0.648438, -0.054688 );
	v( -0.156250, 0.648438, -0.054688 );
	v( 0.078125, 0.656250, -0.242188 );
	v( -0.078125, 0.656250, -0.242188 );
	v( 0.140625, 0.742188, -0.242188 );
	v( -0.140625, 0.742188, -0.242188 );
	v( 0.242188, 0.796875, -0.242188 );
	v( -0.242188, 0.796875, -0.242188 );
	v( 0.273438, 0.796875, -0.328125 );
	v( -0.273438, 0.796875, -0.328125 );
	v( 0.203125, 0.742188, -0.390625 );
	v( -0.203125, 0.742188, -0.390625 );
	v( 0.156250, 0.648438, -0.437500 );
	v( -0.156250, 0.648438, -0.437500 );
	v( 0.351562, 0.617188, -0.515625 );
	v( -0.351562, 0.617188, -0.515625 );
	v( 0.351562, 0.718750, -0.453125 );
	v( -0.351562, 0.718750, -0.453125 );
	v( 0.351562, 0.781250, -0.359375 );
	v( -0.351562, 0.781250, -0.359375 );
	v( 0.437500, 0.765625, -0.328125 );
	v( -0.437500, 0.765625, -0.328125 );
	v( 0.500000, 0.687500, -0.390625 );
	v( -0.500000, 0.687500, -0.390625 );
	v( 0.546875, 0.578125, -0.437500 );
	v( -0.546875, 0.578125, -0.437500 );
	v( 0.625000, 0.562500, -0.242188 );
	v( -0.625000, 0.562500, -0.242188 );
	v( 0.562500, 0.671875, -0.242188 );
	v( -0.562500, 0.671875, -0.242188 );
	v( 0.468750, 0.757812, -0.242188 );
	v( -0.468750, 0.757812, -0.242188 );
	v( 0.476562, 0.773438, -0.242188 );
	v( -0.476562, 0.773438, -0.242188 );
	v( 0.445312, 0.781250, -0.335938 );
	v( -0.445312, 0.781250, -0.335938 );
	v( 0.351562, 0.804688, -0.375000 );
	v( -0.351562, 0.804688, -0.375000 );
	v( 0.265625, 0.820312, -0.335938 );
	v( -0.265625, 0.820312, -0.335938 );
	v( 0.226562, 0.820312, -0.242188 );
	v( -0.226562, 0.820312, -0.242188 );
	v( 0.265625, 0.820312, -0.156250 );
	v( -0.265625, 0.820312, -0.156250 );
	v( 0.351562, 0.828125, -0.242188 );
	v( -0.351562, 0.828125, -0.242188 );
	v( 0.351562, 0.804688, -0.117188 );
	v( -0.351562, 0.804688, -0.117188 );
	v( 0.445312, 0.781250, -0.156250 );
	v( -0.445312, 0.781250, -0.156250 );
	v( 0.000000, 0.742188, -0.429688 );
	v( 0.000000, 0.820312, -0.351562 );
	v( 0.000000, 0.734375, 0.679688 );
	v( 0.000000, 0.781250, 0.320312 );
	v( 0.000000, 0.796875, 0.187500 );
	v( 0.000000, 0.718750, 0.773438 );
	v( 0.000000, 0.601562, -0.406250 );
	v( 0.000000, 0.570312, -0.570312 );
	v( 0.000000, -0.546875, -0.898438 );
	v( 0.000000, -0.851562, -0.562500 );
	v( 0.000000, -0.828125, -0.070312 );
	v( 0.000000, -0.351562, 0.382812 );
	v( 0.203125, 0.562500, 0.187500 );
	v( -0.203125, 0.562500, 0.187500 );
	v( 0.312500, 0.570312, 0.437500 );
	v( -0.312500, 0.570312, 0.437500 );
	v( 0.351562, 0.570312, 0.695312 );
	v( -0.351562, 0.570312, 0.695312 );
	v( 0.367188, 0.531250, 0.890625 );
	v( -0.367188, 0.531250, 0.890625 );
	v( 0.328125, 0.523438, 0.945312 );
	v( -0.328125, 0.523438, 0.945312 );
	v( 0.179688, 0.554688, 0.968750 );
	v( -0.179688, 0.554688, 0.968750 );
	v( 0.000000, 0.578125, 0.984375 );
	v( 0.437500, 0.531250, 0.140625 );
	v( -0.437500, 0.531250, 0.140625 );
	v( 0.632812, 0.539062, 0.039062 );
	v( -0.632812, 0.539062, 0.039062 );
	v( 0.828125, 0.445312, -0.148438 );
	v( -0.828125, 0.445312, -0.148438 );
	v( 0.859375, 0.593750, -0.429688 );
	v( -0.859375, 0.593750, -0.429688 );
	v( 0.710938, 0.625000, -0.484375 );
	v( -0.710938, 0.625000, -0.484375 );
	v( 0.492188, 0.687500, -0.601562 );
	v( -0.492188, 0.687500, -0.601562 );
	v( 0.320312, 0.734375, -0.757812 );
	v( -0.320312, 0.734375, -0.757812 );
	v( 0.156250, 0.757812, -0.718750 );
	v( -0.156250, 0.757812, -0.718750 );
	v( 0.062500, 0.750000, -0.492188 );
	v( -0.062500, 0.750000, -0.492188 );
	v( 0.164062, 0.773438, -0.414062 );
	v( -0.164062, 0.773438, -0.414062 );
	v( 0.125000, 0.765625, -0.304688 );
	v( -0.125000, 0.765625, -0.304688 );
	v( 0.203125, 0.742188, -0.093750 );
	v( -0.203125, 0.742188, -0.093750 );
	v( 0.375000, 0.703125, -0.015625 );
	v( -0.375000, 0.703125, -0.015625 );
	v( 0.492188, 0.671875, -0.062500 );
	v( -0.492188, 0.671875, -0.062500 );
	v( 0.625000, 0.648438, -0.187500 );
	v( -0.625000, 0.648438, -0.187500 );
	v( 0.640625, 0.648438, -0.296875 );
	v( -0.640625, 0.648438, -0.296875 );
	v( 0.601562, 0.664062, -0.375000 );
	v( -0.601562, 0.664062, -0.375000 );
	v( 0.429688, 0.718750, -0.437500 );
	v( -0.429688, 0.718750, -0.437500 );
	v( 0.250000, 0.757812, -0.468750 );
	v( -0.250000, 0.757812, -0.468750 );
	v( 0.000000, 0.734375, 0.765625 );
	v( 0.109375, 0.734375, 0.718750 );
	v( -0.109375, 0.734375, 0.718750 );
	v( 0.117188, 0.710938, 0.835938 );
	v( -0.117188, 0.710938, 0.835938 );
	v( 0.062500, 0.695312, 0.882812 );
	v( -0.062500, 0.695312, 0.882812 );
	v( 0.000000, 0.687500, 0.890625 );
	v( 0.000000, 0.750000, 0.195312 );
	v( 0.000000, 0.742188, 0.140625 );
	v( 0.101562, 0.742188, 0.148438 );
	v( -0.101562, 0.742188, 0.148438 );
	v( 0.125000, 0.750000, 0.226562 );
	v( -0.125000, 0.750000, 0.226562 );
	v( 0.085938, 0.742188, 0.289062 );
	v( -0.085938, 0.742188, 0.289062 );
	v( 0.398438, 0.671875, 0.046875 );
	v( -0.398438, 0.671875, 0.046875 );
	v( 0.617188, 0.625000, -0.054688 );
	v( -0.617188, 0.625000, -0.054688 );
	v( 0.726562, 0.601562, -0.203125 );
	v( -0.726562, 0.601562, -0.203125 );
	v( 0.742188, 0.656250, -0.375000 );
	v( -0.742188, 0.656250, -0.375000 );
	v( 0.687500, 0.726562, -0.414062 );
	v( -0.687500, 0.726562, -0.414062 );
	v( 0.437500, 0.796875, -0.546875 );
	v( -0.437500, 0.796875, -0.546875 );
	v( 0.312500, 0.835938, -0.640625 );
	v( -0.312500, 0.835938, -0.640625 );
	v( 0.203125, 0.851562, -0.617188 );
	v( -0.203125, 0.851562, -0.617188 );
	v( 0.101562, 0.843750, -0.429688 );
	v( -0.101562, 0.843750, -0.429688 );
	v( 0.125000, 0.812500, 0.101562 );
	v( -0.125000, 0.812500, 0.101562 );
	v( 0.210938, 0.710938, 0.445312 );
	v( -0.210938, 0.710938, 0.445312 );
	v( 0.250000, 0.687500, 0.703125 );
	v( -0.250000, 0.687500, 0.703125 );
	v( 0.265625, 0.664062, 0.820312 );
	v( -0.265625, 0.664062, 0.820312 );
	v( 0.234375, 0.632812, 0.914062 );
	v( -0.234375, 0.632812, 0.914062 );
	v( 0.164062, 0.632812, 0.929688 );
	v( -0.164062, 0.632812, 0.929688 );
	v( 0.000000, 0.640625, 0.945312 );
	v( 0.000000, 0.726562, -0.046875 );
	v( 0.000000, 0.765625, -0.210938 );
	v( 0.328125, 0.742188, -0.476562 );
	v( -0.328125, 0.742188, -0.476562 );
	v( 0.164062, 0.750000, -0.140625 );
	v( -0.164062, 0.750000, -0.140625 );
	v( 0.132812, 0.757812, -0.210938 );
	v( -0.132812, 0.757812, -0.210938 );
	v( 0.117188, 0.734375, 0.687500 );
	v( -0.117188, 0.734375, 0.687500 );
	v( 0.078125, 0.750000, 0.445312 );
	v( -0.078125, 0.750000, 0.445312 );
	v( 0.000000, 0.750000, 0.445312 );
	v( 0.000000, 0.742188, 0.328125 );
	v( 0.093750, 0.781250, 0.273438 );
	v( -0.093750, 0.781250, 0.273438 );
	v( 0.132812, 0.796875, 0.226562 );
	v( -0.132812, 0.796875, 0.226562 );
	v( 0.109375, 0.781250, 0.132812 );
	v( -0.109375, 0.781250, 0.132812 );
	v( 0.039062, 0.781250, 0.125000 );
	v( -0.039062, 0.781250, 0.125000 );
	v( 0.000000, 0.828125, 0.203125 );
	v( 0.046875, 0.812500, 0.148438 );
	v( -0.046875, 0.812500, 0.148438 );
	v( 0.093750, 0.812500, 0.156250 );
	v( -0.093750, 0.812500, 0.156250 );
	v( 0.109375, 0.828125, 0.226562 );
	v( -0.109375, 0.828125, 0.226562 );
	v( 0.078125, 0.804688, 0.250000 );
	v( -0.078125, 0.804688, 0.250000 );
	v( 0.000000, 0.804688, 0.289062 );
	v( 0.257812, 0.554688, 0.312500 );
	v( -0.257812, 0.554688, 0.312500 );
	v( 0.164062, 0.710938, 0.242188 );
	v( -0.164062, 0.710938, 0.242188 );
	v( 0.179688, 0.710938, 0.312500 );
	v( -0.179688, 0.710938, 0.312500 );
	v( 0.234375, 0.554688, 0.250000 );
	v( -0.234375, 0.554688, 0.250000 );
	v( 0.000000, 0.687500, 0.875000 );
	v( 0.046875, 0.687500, 0.867188 );
	v( -0.046875, 0.687500, 0.867188 );
	v( 0.093750, 0.710938, 0.820312 );
	v( -0.093750, 0.710938, 0.820312 );
	v( 0.093750, 0.726562, 0.742188 );
	v( -0.093750, 0.726562, 0.742188 );
	v( 0.000000, 0.656250, 0.781250 );
	v( 0.093750, 0.664062, 0.750000 );
	v( -0.093750, 0.664062, 0.750000 );
	v( 0.093750, 0.640625, 0.812500 );
	v( -0.093750, 0.640625, 0.812500 );
	v( 0.046875, 0.632812, 0.851562 );
	v( -0.046875, 0.632812, 0.851562 );
	v( 0.000000, 0.632812, 0.859375 );
	v( 0.171875, 0.781250, -0.218750 );
	v( -0.171875, 0.781250, -0.218750 );
	v( 0.187500, 0.773438, -0.156250 );
	v( -0.187500, 0.773438, -0.156250 );
	v( 0.335938, 0.757812, -0.429688 );
	v( -0.335938, 0.757812, -0.429688 );
	v( 0.273438, 0.773438, -0.421875 );
	v( -0.273438, 0.773438, -0.421875 );
	v( 0.421875, 0.773438, -0.398438 );
	v( -0.421875, 0.773438, -0.398438 );
	v( 0.562500, 0.695312, -0.351562 );
	v( -0.562500, 0.695312, -0.351562 );
	v( 0.585938, 0.687500, -0.289062 );
	v( -0.585938, 0.687500, -0.289062 );
	v( 0.578125, 0.679688, -0.195312 );
	v( -0.578125, 0.679688, -0.195312 );
	v( 0.476562, 0.718750, -0.101562 );
	v( -0.476562, 0.718750, -0.101562 );
	v( 0.375000, 0.742188, -0.062500 );
	v( -0.375000, 0.742188, -0.062500 );
	v( 0.226562, 0.781250, -0.109375 );
	v( -0.226562, 0.781250, -0.109375 );
	v( 0.179688, 0.781250, -0.296875 );
	v( -0.179688, 0.781250, -0.296875 );
	v( 0.210938, 0.781250, -0.375000 );
	v( -0.210938, 0.781250, -0.375000 );
	v( 0.234375, 0.757812, -0.359375 );
	v( -0.234375, 0.757812, -0.359375 );
	v( 0.195312, 0.757812, -0.296875 );
	v( -0.195312, 0.757812, -0.296875 );
	v( 0.242188, 0.757812, -0.125000 );
	v( -0.242188, 0.757812, -0.125000 );
	v( 0.375000, 0.726562, -0.085938 );
	v( -0.375000, 0.726562, -0.085938 );
	v( 0.460938, 0.703125, -0.117188 );
	v( -0.460938, 0.703125, -0.117188 );
	v( 0.546875, 0.671875, -0.210938 );
	v( -0.546875, 0.671875, -0.210938 );
	v( 0.554688, 0.671875, -0.281250 );
	v( -0.554688, 0.671875, -0.281250 );
	v( 0.531250, 0.679688, -0.335938 );
	v( -0.531250, 0.679688, -0.335938 );
	v( 0.414062, 0.750000, -0.390625 );
	v( -0.414062, 0.750000, -0.390625 );
	v( 0.281250, 0.765625, -0.398438 );
	v( -0.281250, 0.765625, -0.398438 );
	v( 0.335938, 0.750000, -0.406250 );
	v( -0.335938, 0.750000, -0.406250 );
	v( 0.203125, 0.750000, -0.171875 );
	v( -0.203125, 0.750000, -0.171875 );
	v( 0.195312, 0.750000, -0.226562 );
	v( -0.195312, 0.750000, -0.226562 );
	v( 0.109375, 0.609375, -0.460938 );
	v( -0.109375, 0.609375, -0.460938 );
	v( 0.195312, 0.617188, -0.664062 );
	v( -0.195312, 0.617188, -0.664062 );
	v( 0.335938, 0.593750, -0.687500 );
	v( -0.335938, 0.593750, -0.687500 );
	v( 0.484375, 0.554688, -0.554688 );
	v( -0.484375, 0.554688, -0.554688 );
	v( 0.679688, 0.492188, -0.453125 );
	v( -0.679688, 0.492188, -0.453125 );
	v( 0.796875, 0.460938, -0.406250 );
	v( -0.796875, 0.460938, -0.406250 );
	v( 0.773438, 0.375000, -0.164062 );
	v( -0.773438, 0.375000, -0.164062 );
	v( 0.601562, 0.414062, -0.000000 );
	v( -0.601562, 0.414062, -0.000000 );
	v( 0.437500, 0.468750, 0.093750 );
	v( -0.437500, 0.468750, 0.093750 );
	v( 0.000000, 0.289062, -0.898438 );
	v( 0.000000, -0.078125, -0.984375 );
	v( 0.000000, -0.671875, 0.195312 );
	v( 0.000000, 0.187500, 0.460938 );
	v( 0.000000, 0.460938, 0.976562 );
	v( 0.000000, 0.343750, 0.804688 );
	v( 0.000000, 0.320312, 0.570312 );
	v( 0.000000, 0.281250, 0.484375 );
	v( 0.851562, 0.054688, -0.234375 );
	v( -0.851562, 0.054688, -0.234375 );
	v( 0.859375, -0.046875, -0.320312 );
	v( -0.859375, -0.046875, -0.320312 );
	v( 0.773438, -0.437500, -0.265625 );
	v( -0.773438, -0.437500, -0.265625 );
	v( 0.460938, -0.703125, -0.437500 );
	v( -0.460938, -0.703125, -0.437500 );
	v( 0.734375, 0.070312, 0.046875 );
	v( -0.734375, 0.070312, 0.046875 );
	v( 0.593750, -0.164062, 0.125000 );
	v( -0.593750, -0.164062, 0.125000 );
	v( 0.640625, -0.429688, 0.007812 );
	v( -0.640625, -0.429688, 0.007812 );
	v( 0.335938, -0.664062, -0.054688 );
	v( -0.335938, -0.664062, -0.054688 );
	v( 0.234375, 0.406250, 0.351562 );
	v( -0.234375, 0.406250, 0.351562 );
	v( 0.179688, 0.257812, 0.414062 );
	v( -0.179688, 0.257812, 0.414062 );
	v( 0.289062, 0.382812, 0.710938 );
	v( -0.289062, 0.382812, 0.710938 );
	v( 0.250000, 0.390625, 0.500000 );
	v( -0.250000, 0.390625, 0.500000 );
	v( 0.328125, 0.398438, 0.914062 );
	v( -0.328125, 0.398438, 0.914062 );
	v( 0.140625, 0.367188, 0.757812 );
	v( -0.140625, 0.367188, 0.757812 );
	v( 0.125000, 0.359375, 0.539062 );
	v( -0.125000, 0.359375, 0.539062 );
	v( 0.164062, 0.437500, 0.945312 );
	v( -0.164062, 0.437500, 0.945312 );
	v( 0.218750, 0.429688, 0.281250 );
	v( -0.218750, 0.429688, 0.281250 );
	v( 0.210938, 0.468750, 0.226562 );
	v( -0.210938, 0.468750, 0.226562 );
	v( 0.203125, 0.500000, 0.171875 );
	v( -0.203125, 0.500000, 0.171875 );
	v( 0.210938, 0.164062, 0.390625 );
	v( -0.210938, 0.164062, 0.390625 );
	v( 0.296875, -0.265625, 0.312500 );
	v( -0.296875, -0.265625, 0.312500 );
	v( 0.343750, -0.539062, 0.148438 );
	v( -0.343750, -0.539062, 0.148438 );
	v( 0.453125, -0.382812, -0.867188 );
	v( -0.453125, -0.382812, -0.867188 );
	v( 0.453125, -0.070312, -0.929688 );
	v( -0.453125, -0.070312, -0.929688 );
	v( 0.453125, 0.234375, -0.851562 );
	v( -0.453125, 0.234375, -0.851562 );
	v( 0.460938, 0.429688, -0.523438 );
	v( -0.460938, 0.429688, -0.523438 );
	v( 0.726562, 0.335938, -0.406250 );
	v( -0.726562, 0.335938, -0.406250 );
	v( 0.632812, 0.281250, -0.453125 );
	v( -0.632812, 0.281250, -0.453125 );
	v( 0.640625, 0.054688, -0.703125 );
	v( -0.640625, 0.054688, -0.703125 );
	v( 0.796875, 0.125000, -0.562500 );
	v( -0.796875, 0.125000, -0.562500 );
	v( 0.796875, -0.117188, -0.617188 );
	v( -0.796875, -0.117188, -0.617188 );
	v( 0.640625, -0.195312, -0.750000 );
	v( -0.640625, -0.195312, -0.750000 );
	v( 0.640625, -0.445312, -0.679688 );
	v( -0.640625, -0.445312, -0.679688 );
	v( 0.796875, -0.359375, -0.539062 );
	v( -0.796875, -0.359375, -0.539062 );
	v( 0.617188, -0.585938, -0.328125 );
	v( -0.617188, -0.585938, -0.328125 );
	v( 0.484375, -0.546875, -0.023438 );
	v( -0.484375, -0.546875, -0.023438 );
	v( 0.820312, -0.203125, -0.328125 );
	v( -0.820312, -0.203125, -0.328125 );
	v( 0.406250, 0.148438, 0.171875 );
	v( -0.406250, 0.148438, 0.171875 );
	v( 0.429688, -0.210938, 0.195312 );
	v( -0.429688, -0.210938, 0.195312 );
	v( 0.890625, -0.234375, -0.406250 );
	v( -0.890625, -0.234375, -0.406250 );
	v( 0.773438, -0.125000, 0.140625 );
	v( -0.773438, -0.125000, 0.140625 );
	v( 1.039062, -0.328125, 0.101562 );
	v( -1.039062, -0.328125, 0.101562 );
	v( 1.281250, -0.429688, -0.054688 );
	v( -1.281250, -0.429688, -0.054688 );
	v( 1.351562, -0.421875, -0.320312 );
	v( -1.351562, -0.421875, -0.320312 );
	v( 1.234375, -0.421875, -0.507812 );
	v( -1.234375, -0.421875, -0.507812 );
	v( 1.023438, -0.312500, -0.476562 );
	v( -1.023438, -0.312500, -0.476562 );
	v( 1.015625, -0.289062, -0.414062 );
	v( -1.015625, -0.289062, -0.414062 );
	v( 1.187500, -0.390625, -0.437500 );
	v( -1.187500, -0.390625, -0.437500 );
	v( 1.265625, -0.406250, -0.289062 );
	v( -1.265625, -0.406250, -0.289062 );
	v( 1.210938, -0.406250, -0.078125 );
	v( -1.210938, -0.406250, -0.078125 );
	v( 1.031250, -0.304688, 0.039062 );
	v( -1.031250, -0.304688, 0.039062 );
	v( 0.828125, -0.132812, 0.070312 );
	v( -0.828125, -0.132812, 0.070312 );
	v( 0.921875, -0.218750, -0.359375 );
	v( -0.921875, -0.218750, -0.359375 );
	v( 0.945312, -0.289062, -0.304688 );
	v( -0.945312, -0.289062, -0.304688 );
	v( 0.882812, -0.210938, 0.023438 );
	v( -0.882812, -0.210938, 0.023438 );
	v( 1.039062, -0.367188, -0.000000 );
	v( -1.039062, -0.367188, -0.000000 );
	v( 1.187500, -0.445312, -0.093750 );
	v( -1.187500, -0.445312, -0.093750 );
	v( 1.234375, -0.445312, -0.250000 );
	v( -1.234375, -0.445312, -0.250000 );
	v( 1.171875, -0.437500, -0.359375 );
	v( -1.171875, -0.437500, -0.359375 );
	v( 1.023438, -0.359375, -0.343750 );
	v( -1.023438, -0.359375, -0.343750 );
	v( 0.843750, -0.210938, -0.289062 );
	v( -0.843750, -0.210938, -0.289062 );
	v( 0.835938, -0.273438, -0.171875 );
	v( -0.835938, -0.273438, -0.171875 );
	v( 0.757812, -0.273438, -0.093750 );
	v( -0.757812, -0.273438, -0.093750 );
	v( 0.820312, -0.273438, -0.085938 );
	v( -0.820312, -0.273438, -0.085938 );
	v( 0.843750, -0.273438, -0.015625 );
	v( -0.843750, -0.273438, -0.015625 );
	v( 0.812500, -0.273438, 0.015625 );
	v( -0.812500, -0.273438, 0.015625 );
	v( 0.726562, -0.070312, -0.000000 );
	v( -0.726562, -0.070312, -0.000000 );
	v( 0.718750, -0.171875, 0.023438 );
	v( -0.718750, -0.171875, 0.023438 );
	v( 0.718750, -0.187500, -0.039062 );
	v( -0.718750, -0.187500, -0.039062 );
	v( 0.796875, -0.210938, -0.203125 );
	v( -0.796875, -0.210938, -0.203125 );
	v( 0.890625, -0.265625, -0.242188 );
	v( -0.890625, -0.265625, -0.242188 );
	v( 0.890625, -0.320312, -0.234375 );
	v( -0.890625, -0.320312, -0.234375 );
	v( 0.812500, -0.320312, 0.015625 );
	v( -0.812500, -0.320312, 0.015625 );
	v( 0.851562, -0.320312, -0.015625 );
	v( -0.851562, -0.320312, -0.015625 );
	v( 0.828125, -0.320312, -0.078125 );
	v( -0.828125, -0.320312, -0.078125 );
	v( 0.765625, -0.320312, -0.093750 );
	v( -0.765625, -0.320312, -0.093750 );
	v( 0.843750, -0.320312, -0.171875 );
	v( -0.843750, -0.320312, -0.171875 );
	v( 1.039062, -0.414062, -0.328125 );
	v( -1.039062, -0.414062, -0.328125 );
	v( 1.187500, -0.484375, -0.343750 );
	v( -1.187500, -0.484375, -0.343750 );
	v( 1.257812, -0.492188, -0.242188 );
	v( -1.257812, -0.492188, -0.242188 );
	v( 1.210938, -0.484375, -0.085938 );
	v( -1.210938, -0.484375, -0.085938 );
	v( 1.046875, -0.421875, -0.000000 );
	v( -1.046875, -0.421875, -0.000000 );
	v( 0.882812, -0.265625, 0.015625 );
	v( -0.882812, -0.265625, 0.015625 );
	v( 0.953125, -0.343750, -0.289062 );
	v( -0.953125, -0.343750, -0.289062 );
	v( 0.890625, -0.328125, -0.109375 );
	v( -0.890625, -0.328125, -0.109375 );
	v( 0.937500, -0.335938, -0.062500 );
	v( -0.937500, -0.335938, -0.062500 );
	v( 1.000000, -0.367188, -0.125000 );
	v( -1.000000, -0.367188, -0.125000 );
	v( 0.960938, -0.351562, -0.171875 );
	v( -0.960938, -0.351562, -0.171875 );
	v( 1.015625, -0.375000, -0.234375 );
	v( -1.015625, -0.375000, -0.234375 );
	v( 1.054688, -0.382812, -0.187500 );
	v( -1.054688, -0.382812, -0.187500 );
	v( 1.109375, -0.390625, -0.210938 );
	v( -1.109375, -0.390625, -0.210938 );
	v( 1.085938, -0.390625, -0.273438 );
	v( -1.085938, -0.390625, -0.273438 );
	v( 1.023438, -0.484375, -0.437500 );
	v( -1.023438, -0.484375, -0.437500 );
	v( 1.250000, -0.546875, -0.468750 );
	v( -1.250000, -0.546875, -0.468750 );
	v( 1.367188, -0.500000, -0.296875 );
	v( -1.367188, -0.500000, -0.296875 );
	v( 1.312500, -0.531250, -0.054688 );
	v( -1.312500, -0.531250, -0.054688 );
	v( 1.039062, -0.492188, 0.085938 );
	v( -1.039062, -0.492188, 0.085938 );
	v( 0.789062, -0.328125, 0.125000 );
	v( -0.789062, -0.328125, 0.125000 );
	v( 0.859375, -0.382812, -0.382812 );
	v( -0.859375, -0.382812, -0.382812 );

	f4( 46, 0, 2, 44 );
	f4( 3, 1, 47, 45 );
	f4( 44, 2, 4, 42 );
	f4( 5, 3, 45, 43 );
	f4( 2, 8, 6, 4 );
	f4( 7, 9, 3, 5 );
	f4( 0, 10, 8, 2 );
	f4( 9, 11, 1, 3 );
	f4( 10, 12, 14, 8 );
	f4( 15, 13, 11, 9 );
	f4( 8, 14, 16, 6 );
	f4( 17, 15, 9, 7 );
	f4( 14, 20, 18, 16 );
	f4( 19, 21, 15, 17 );
	f4( 12, 22, 20, 14 );
	f4( 21, 23, 13, 15 );
	f4( 22, 24, 26, 20 );
	f4( 27, 25, 23, 21 );
	f4( 20, 26, 28, 18 );
	f4( 29, 27, 21, 19 );
	f4( 26, 32, 30, 28 );
	f4( 31, 33, 27, 29 );
	f4( 24, 34, 32, 26 );
	f4( 33, 35, 25, 27 );
	f4( 34, 36, 38, 32 );
	f4( 39, 37, 35, 33 );
	f4( 32, 38, 40, 30 );
	f4( 41, 39, 33, 31 );
	f4( 38, 44, 42, 40 );
	f4( 43, 45, 39, 41 );
	f4( 36, 46, 44, 38 );
	f4( 45, 47, 37, 39 );
	f4( 46, 36, 50, 48 );
	f4( 51, 37, 47, 49 );
	f4( 36, 34, 52, 50 );
	f4( 53, 35, 37, 51 );
	f4( 34, 24, 54, 52 );
	f4( 55, 25, 35, 53 );
	f4( 24, 22, 56, 54 );
	f4( 57, 23, 25, 55 );
	f4( 22, 12, 58, 56 );
	f4( 59, 13, 23, 57 );
	f4( 12, 10, 62, 58 );
	f4( 63, 11, 13, 59 );
	f4( 10, 0, 64, 62 );
	f4( 65, 1, 11, 63 );
	f4( 0, 46, 48, 64 );
	f4( 49, 47, 1, 65 );
	f3( 60, 64, 48 );
	f3( 49, 65, 61 );
	f3( 62, 64, 60 );
	f3( 61, 65, 63 );
	f3( 60, 58, 62 );
	f3( 63, 59, 61 );
	f3( 60, 56, 58 );
	f3( 59, 57, 61 );
	f3( 60, 54, 56 );
	f3( 57, 55, 61 );
	f3( 60, 52, 54 );
	f3( 55, 53, 61 );
	f3( 60, 50, 52 );
	f3( 53, 51, 61 );
	f3( 60, 48, 50 );
	f3( 51, 49, 61 );
	f4( 88, 173, 175, 90 );
	f4( 175, 174, 89, 90 );
	f4( 86, 171, 173, 88 );
	f4( 174, 172, 87, 89 );
	f4( 84, 169, 171, 86 );
	f4( 172, 170, 85, 87 );
	f4( 82, 167, 169, 84 );
	f4( 170, 168, 83, 85 );
	f4( 80, 165, 167, 82 );
	f4( 168, 166, 81, 83 );
	f4( 78, 91, 145, 163 );
	f4( 146, 92, 79, 164 );
	f4( 91, 93, 147, 145 );
	f4( 148, 94, 92, 146 );
	f4( 93, 95, 149, 147 );
	f4( 150, 96, 94, 148 );
	f4( 95, 97, 151, 149 );
	f4( 152, 98, 96, 150 );
	f4( 97, 99, 153, 151 );
	f4( 154, 100, 98, 152 );
	f4( 99, 101, 155, 153 );
	f4( 156, 102, 100, 154 );
	f4( 101, 103, 157, 155 );
	f4( 158, 104, 102, 156 );
	f4( 103, 105, 159, 157 );
	f4( 160, 106, 104, 158 );
	f4( 105, 107, 161, 159 );
	f4( 162, 108, 106, 160 );
	f4( 107, 66, 67, 161 );
	f4( 67, 66, 108, 162 );
	f4( 109, 127, 159, 161 );
	f4( 160, 128, 110, 162 );
	f4( 127, 178, 157, 159 );
	f4( 158, 179, 128, 160 );
	f4( 125, 155, 157, 178 );
	f4( 158, 156, 126, 179 );
	f4( 123, 153, 155, 125 );
	f4( 156, 154, 124, 126 );
	f4( 121, 151, 153, 123 );
	f4( 154, 152, 122, 124 );
	f4( 119, 149, 151, 121 );
	f4( 152, 150, 120, 122 );
	f4( 117, 147, 149, 119 );
	f4( 150, 148, 118, 120 );
	f4( 115, 145, 147, 117 );
	f4( 148, 146, 116, 118 );
	f4( 113, 163, 145, 115 );
	f4( 146, 164, 114, 116 );
	f4( 113, 180, 176, 163 );
	f4( 176, 181, 114, 164 );
	f4( 109, 161, 67, 111 );
	f4( 67, 162, 110, 112 );
	f4( 111, 67, 177, 182 );
	f4( 177, 67, 112, 183 );
	f4( 176, 180, 182, 177 );
	f4( 183, 181, 176, 177 );
	f4( 134, 136, 175, 173 );
	f4( 175, 136, 135, 174 );
	f4( 132, 134, 173, 171 );
	f4( 174, 135, 133, 172 );
	f4( 130, 132, 171, 169 );
	f4( 172, 133, 131, 170 );
	f4( 165, 186, 184, 167 );
	f4( 185, 187, 166, 168 );
	f4( 130, 169, 167, 184 );
	f4( 168, 170, 131, 185 );
	f4( 143, 189, 188, 186 );
	f4( 188, 189, 144, 187 );
	f4( 184, 186, 188, 68 );
	f4( 188, 187, 185, 68 );
	f4( 129, 130, 184, 68 );
	f4( 185, 131, 129, 68 );
	f4( 141, 192, 190, 143 );
	f4( 191, 193, 142, 144 );
	f4( 139, 194, 192, 141 );
	f4( 193, 195, 140, 142 );
	f4( 138, 196, 194, 139 );
	f4( 195, 197, 138, 140 );
	f4( 137, 70, 196, 138 );
	f4( 197, 70, 137, 138 );
	f4( 189, 143, 190, 69 );
	f4( 191, 144, 189, 69 );
	f4( 69, 190, 205, 207 );
	f4( 206, 191, 69, 207 );
	f4( 70, 198, 199, 196 );
	f4( 200, 198, 70, 197 );
	f4( 196, 199, 201, 194 );
	f4( 202, 200, 197, 195 );
	f4( 194, 201, 203, 192 );
	f4( 204, 202, 195, 193 );
	f4( 192, 203, 205, 190 );
	f4( 206, 204, 193, 191 );
	f4( 198, 203, 201, 199 );
	f4( 202, 204, 198, 200 );
	f4( 198, 207, 205, 203 );
	f4( 206, 207, 198, 204 );
	f4( 138, 139, 163, 176 );
	f4( 164, 140, 138, 176 );
	f4( 139, 141, 210, 163 );
	f4( 211, 142, 140, 164 );
	f4( 141, 143, 212, 210 );
	f4( 213, 144, 142, 211 );
	f4( 143, 186, 165, 212 );
	f4( 166, 187, 144, 213 );
	f4( 80, 208, 212, 165 );
	f4( 213, 209, 81, 166 );
	f4( 208, 214, 210, 212 );
	f4( 211, 215, 209, 213 );
	f4( 78, 163, 210, 214 );
	f4( 211, 164, 79, 215 );
	f4( 130, 129, 71, 221 );
	f4( 71, 129, 131, 222 );
	f4( 132, 130, 221, 219 );
	f4( 222, 131, 133, 220 );
	f4( 134, 132, 219, 217 );
	f4( 220, 133, 135, 218 );
	f4( 136, 134, 217, 216 );
	f4( 218, 135, 136, 216 );
	f4( 216, 217, 228, 230 );
	f4( 229, 218, 216, 230 );
	f4( 217, 219, 226, 228 );
	f4( 227, 220, 218, 229 );
	f4( 219, 221, 224, 226 );
	f4( 225, 222, 220, 227 );
	f4( 221, 71, 223, 224 );
	f4( 223, 71, 222, 225 );
	f4( 223, 230, 228, 224 );
	f4( 229, 230, 223, 225 );
	f3( 224, 228, 226 );
	f3( 227, 229, 225 );
	f4( 182, 180, 233, 231 );
	f4( 234, 181, 183, 232 );
	f4( 111, 182, 231, 253 );
	f4( 232, 183, 112, 254 );
	f4( 109, 111, 253, 255 );
	f4( 254, 112, 110, 256 );
	f4( 180, 113, 251, 233 );
	f4( 252, 114, 181, 234 );
	f4( 113, 115, 249, 251 );
	f4( 250, 116, 114, 252 );
	f4( 115, 117, 247, 249 );
	f4( 248, 118, 116, 250 );
	f4( 117, 119, 245, 247 );
	f4( 246, 120, 118, 248 );
	f4( 119, 121, 243, 245 );
	f4( 244, 122, 120, 246 );
	f4( 121, 123, 241, 243 );
	f4( 242, 124, 122, 244 );
	f4( 123, 125, 239, 241 );
	f4( 240, 126, 124, 242 );
	f4( 125, 178, 235, 239 );
	f4( 236, 179, 126, 240 );
	f4( 178, 127, 237, 235 );
	f4( 238, 128, 179, 236 );
	f4( 127, 109, 255, 237 );
	f4( 256, 110, 128, 238 );
	f4( 237, 255, 257, 275 );
	f4( 258, 256, 238, 276 );
	f4( 235, 237, 275, 277 );
	f4( 276, 238, 236, 278 );
	f4( 239, 235, 277, 273 );
	f4( 278, 236, 240, 274 );
	f4( 241, 239, 273, 271 );
	f4( 274, 240, 242, 272 );
	f4( 243, 241, 271, 269 );
	f4( 272, 242, 244, 270 );
	f4( 245, 243, 269, 267 );
	f4( 270, 244, 246, 268 );
	f4( 247, 245, 267, 265 );
	f4( 268, 246, 248, 266 );
	f4( 249, 247, 265, 263 );
	f4( 266, 248, 250, 264 );
	f4( 251, 249, 263, 261 );
	f4( 264, 250, 252, 262 );
	f4( 233, 251, 261, 279 );
	f4( 262, 252, 234, 280 );
	f4( 255, 253, 259, 257 );
	f4( 260, 254, 256, 258 );
	f4( 253, 231, 281, 259 );
	f4( 282, 232, 254, 260 );
	f4( 231, 233, 279, 281 );
	f4( 280, 234, 232, 282 );
	f4( 66, 107, 283, 72 );
	f4( 284, 108, 66, 72 );
	f4( 107, 105, 285, 283 );
	f4( 286, 106, 108, 284 );
	f4( 105, 103, 287, 285 );
	f4( 288, 104, 106, 286 );
	f4( 103, 101, 289, 287 );
	f4( 290, 102, 104, 288 );
	f4( 101, 99, 291, 289 );
	f4( 292, 100, 102, 290 );
	f4( 99, 97, 293, 291 );
	f4( 294, 98, 100, 292 );
	f4( 97, 95, 295, 293 );
	f4( 296, 96, 98, 294 );
	f4( 95, 93, 297, 295 );
	f4( 298, 94, 96, 296 );
	f4( 93, 91, 299, 297 );
	f4( 300, 92, 94, 298 );
	f4( 307, 308, 327, 337 );
	f4( 328, 308, 307, 338 );
	f4( 306, 307, 337, 335 );
	f4( 338, 307, 306, 336 );
	f4( 305, 306, 335, 339 );
	f4( 336, 306, 305, 340 );
	f4( 88, 90, 305, 339 );
	f4( 305, 90, 89, 340 );
	f4( 86, 88, 339, 333 );
	f4( 340, 89, 87, 334 );
	f4( 84, 86, 333, 329 );
	f4( 334, 87, 85, 330 );
	f4( 82, 84, 329, 331 );
	f4( 330, 85, 83, 332 );
	f4( 329, 335, 337, 331 );
	f4( 338, 336, 330, 332 );
	f4( 329, 333, 339, 335 );
	f4( 340, 334, 330, 336 );
	f4( 325, 331, 337, 327 );
	f4( 338, 332, 326, 328 );
	f4( 80, 82, 331, 325 );
	f4( 332, 83, 81, 326 );
	f4( 208, 341, 343, 214 );
	f4( 344, 342, 209, 215 );
	f4( 80, 325, 341, 208 );
	f4( 342, 326, 81, 209 );
	f4( 78, 214, 343, 345 );
	f4( 344, 215, 79, 346 );
	f4( 78, 345, 299, 91 );
	f4( 300, 346, 79, 92 );
	f4( 76, 323, 351, 303 );
	f4( 352, 324, 76, 303 );
	f4( 303, 351, 349, 77 );
	f4( 350, 352, 303, 77 );
	f4( 77, 349, 347, 304 );
	f4( 348, 350, 77, 304 );
	f4( 304, 347, 327, 308 );
	f4( 328, 348, 304, 308 );
	f4( 325, 327, 347, 341 );
	f4( 348, 328, 326, 342 );
	f4( 295, 297, 317, 309 );
	f4( 318, 298, 296, 310 );
	f4( 75, 315, 323, 76 );
	f4( 324, 316, 75, 76 );
	f4( 301, 357, 355, 302 );
	f4( 356, 358, 301, 302 );
	f4( 302, 355, 353, 74 );
	f4( 354, 356, 302, 74 );
	f4( 74, 353, 315, 75 );
	f4( 316, 354, 74, 75 );
	f4( 291, 293, 361, 363 );
	f4( 362, 294, 292, 364 );
	f4( 363, 361, 367, 365 );
	f4( 368, 362, 364, 366 );
	f4( 365, 367, 369, 371 );
	f4( 370, 368, 366, 372 );
	f4( 371, 369, 375, 373 );
	f4( 376, 370, 372, 374 );
	f4( 313, 377, 373, 375 );
	f4( 374, 378, 314, 376 );
	f4( 315, 353, 373, 377 );
	f4( 374, 354, 316, 378 );
	f4( 353, 355, 371, 373 );
	f4( 372, 356, 354, 374 );
	f4( 355, 357, 365, 371 );
	f4( 366, 358, 356, 372 );
	f4( 357, 359, 363, 365 );
	f4( 364, 360, 358, 366 );
	f4( 289, 291, 363, 359 );
	f4( 364, 292, 290, 360 );
	f4( 73, 359, 357, 301 );
	f4( 358, 360, 73, 301 );
	f4( 283, 285, 287, 289 );
	f4( 288, 286, 284, 290 );
	f4( 283, 289, 359, 73 );
	f4( 360, 290, 284, 73 );
	f3( 72, 283, 73 );
	f3( 73, 284, 72 );
	f4( 293, 295, 309, 361 );
	f4( 310, 296, 294, 362 );
	f4( 309, 311, 367, 361 );
	f4( 368, 312, 310, 362 );
	f4( 311, 381, 369, 367 );
	f4( 370, 382, 312, 368 );
	f4( 313, 375, 369, 381 );
	f4( 370, 376, 314, 382 );
	f4( 347, 349, 385, 383 );
	f4( 386, 350, 348, 384 );
	f4( 317, 383, 385, 319 );
	f4( 386, 384, 318, 320 );
	f4( 297, 299, 383, 317 );
	f4( 384, 300, 298, 318 );
	f4( 299, 343, 341, 383 );
	f4( 342, 344, 300, 384 );
	f3( 341, 347, 383 );
	f3( 384, 348, 342 );
	f3( 299, 345, 343 );
	f3( 344, 346, 300 );
	f4( 313, 321, 379, 377 );
	f4( 380, 322, 314, 378 );
	f4( 315, 377, 379, 323 );
	f4( 380, 378, 316, 324 );
	f4( 319, 385, 379, 321 );
	f4( 380, 386, 320, 322 );
	f4( 349, 351, 379, 385 );
	f4( 380, 352, 350, 386 );
	f3( 323, 379, 351 );
	f3( 352, 380, 324 );
	f4( 399, 387, 413, 401 );
	f4( 414, 388, 400, 402 );
	f4( 399, 401, 403, 397 );
	f4( 404, 402, 400, 398 );
	f4( 397, 403, 405, 395 );
	f4( 406, 404, 398, 396 );
	f4( 395, 405, 407, 393 );
	f4( 408, 406, 396, 394 );
	f4( 393, 407, 409, 391 );
	f4( 410, 408, 394, 392 );
	f4( 391, 409, 411, 389 );
	f4( 412, 410, 392, 390 );
	f4( 409, 419, 417, 411 );
	f4( 418, 420, 410, 412 );
	f4( 407, 421, 419, 409 );
	f4( 420, 422, 408, 410 );
	f4( 405, 423, 421, 407 );
	f4( 422, 424, 406, 408 );
	f4( 403, 425, 423, 405 );
	f4( 424, 426, 404, 406 );
	f4( 401, 427, 425, 403 );
	f4( 426, 428, 402, 404 );
	f4( 401, 413, 415, 427 );
	f4( 416, 414, 402, 428 );
	f4( 317, 319, 443, 441 );
	f4( 444, 320, 318, 442 );
	f4( 319, 389, 411, 443 );
	f4( 412, 390, 320, 444 );
	f4( 309, 317, 441, 311 );
	f4( 442, 318, 310, 312 );
	f4( 381, 429, 413, 387 );
	f4( 414, 430, 382, 388 );
	f4( 411, 417, 439, 443 );
	f4( 440, 418, 412, 444 );
	f4( 437, 445, 443, 439 );
	f4( 444, 446, 438, 440 );
	f4( 433, 445, 437, 435 );
	f4( 438, 446, 434, 436 );
	f4( 431, 447, 445, 433 );
	f4( 446, 448, 432, 434 );
	f4( 429, 447, 431, 449 );
	f4( 432, 448, 430, 450 );
	f4( 413, 429, 449, 415 );
	f4( 450, 430, 414, 416 );
	f4( 311, 447, 429, 381 );
	f4( 430, 448, 312, 382 );
	f4( 311, 441, 445, 447 );
	f4( 446, 442, 312, 448 );
	f3( 441, 443, 445 );
	f3( 446, 444, 442 );
	f4( 415, 449, 451, 475 );
	f4( 452, 450, 416, 476 );
	f4( 449, 431, 461, 451 );
	f4( 462, 432, 450, 452 );
	f4( 431, 433, 459, 461 );
	f4( 460, 434, 432, 462 );
	f4( 433, 435, 457, 459 );
	f4( 458, 436, 434, 460 );
	f4( 435, 437, 455, 457 );
	f4( 456, 438, 436, 458 );
	f4( 437, 439, 453, 455 );
	f4( 454, 440, 438, 456 );
	f4( 439, 417, 473, 453 );
	f4( 474, 418, 440, 454 );
	f4( 427, 415, 475, 463 );
	f4( 476, 416, 428, 464 );
	f4( 425, 427, 463, 465 );
	f4( 464, 428, 426, 466 );
	f4( 423, 425, 465, 467 );
	f4( 466, 426, 424, 468 );
	f4( 421, 423, 467, 469 );
	f4( 468, 424, 422, 470 );
	f4( 419, 421, 469, 471 );
	f4( 470, 422, 420, 472 );
	f4( 417, 419, 471, 473 );
	f4( 472, 420, 418, 474 );
	f4( 457, 455, 479, 477 );
	f4( 480, 456, 458, 478 );
	f4( 477, 479, 481, 483 );
	f4( 482, 480, 478, 484 );
	f4( 483, 481, 487, 485 );
	f4( 488, 482, 484, 486 );
	f4( 485, 487, 489, 491 );
	f4( 490, 488, 486, 492 );
	f4( 463, 475, 485, 491 );
	f4( 486, 476, 464, 492 );
	f4( 451, 483, 485, 475 );
	f4( 486, 484, 452, 476 );
	f4( 451, 461, 477, 483 );
	f4( 478, 462, 452, 484 );
	f4( 457, 477, 461, 459 );
	f4( 462, 478, 458, 460 );
	f4( 453, 473, 479, 455 );
	f4( 480, 474, 454, 456 );
	f4( 471, 481, 479, 473 );
	f4( 480, 482, 472, 474 );
	f4( 469, 487, 481, 471 );
	f4( 482, 488, 470, 472 );
	f4( 467, 489, 487, 469 );
	f4( 488, 490, 468, 470 );
	f4( 465, 491, 489, 467 );
	f4( 490, 492, 466, 468 );
	f3( 463, 491, 465 );
	f3( 466, 492, 464 );
	f4( 391, 389, 503, 501 );
	f4( 504, 390, 392, 502 );
	f4( 393, 391, 501, 499 );
	f4( 502, 392, 394, 500 );
	f4( 395, 393, 499, 497 );
	f4( 500, 394, 396, 498 );
	f4( 397, 395, 497, 495 );
	f4( 498, 396, 398, 496 );
	f4( 399, 397, 495, 493 );
	f4( 496, 398, 400, 494 );
	f4( 387, 399, 493, 505 );
	f4( 494, 400, 388, 506 );
	f4( 493, 501, 503, 505 );
	f4( 504, 502, 494, 506 );
	f4( 493, 495, 499, 501 );
	f4( 500, 496, 494, 502 );
	f3( 495, 497, 499 );
	f3( 500, 498, 496 );
	f4( 313, 381, 387, 505 );
	f4( 388, 382, 314, 506 );
	f4( 313, 505, 503, 321 );
	f4( 504, 506, 314, 322 );
	f4( 319, 321, 503, 389 );
	f4( 504, 322, 320, 390 );

	function v( x, y, z ) {

		scope.vertices.push( new THREE.Vertex( new THREE.Vector3( x, y, z ) ) );

	}

	function f3( a, b, c, nx, ny, nz ) {

		scope.faces.push( new THREE.Face3( a, b, c, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	function f4( a, b, c, d, nx, ny, nz ) {

		scope.faces.push( new THREE.Face4( a, b, c, d, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	function uv( u1, v1, u2, v2, u3, v3, u4, v4 ) {

		var uv = [];
		uv.push( new THREE.Vector2( u1, v1 ) );
		uv.push( new THREE.Vector2( u2, v2 ) );
		uv.push( new THREE.Vector2( u3, v3 ) );
		if ( u4 && v4 ) uv.push( new THREE.Vector2( u4, v4 ) );
		scope.uvs.push( uv );
	}

}

Monkey.prototype = new THREE.Geometry();
Monkey.prototype.constructor = Monkey;