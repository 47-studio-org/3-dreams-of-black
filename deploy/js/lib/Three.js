// Three.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,f=this.z;this.x=d*a.z-f*a.y;this.y=f*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,f){this.x=a||0;this.y=c||0;this.z=d||0;this.w=f||1};
THREE.Vector4.prototype={set:function(a,c,d,f){this.x=a;this.y=c;this.z=d;this.w=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,f=a.objects,g=[];a=0;for(c=f.length;a<c;a++){d=f[a];if(d instanceof THREE.Mesh)g=g.concat(this.intersectObject(d))}g.sort(function(p,h){return p.distance-h.distance});return g},intersectObject:function(a){function c(R,A,Q,K){K=K.clone().subSelf(A);Q=Q.clone().subSelf(A);var e=R.clone().subSelf(A);R=K.dot(K);A=K.dot(Q);K=K.dot(e);var j=Q.dot(Q);Q=Q.dot(e);e=1/(R*j-A*A);j=(j*K-A*Q)*e;R=(R*Q-A*K)*e;return j>0&&R>0&&j+R<1}var d,f,g,p,h,b,i,k,x,y,
w,v=a.geometry,E=v.vertices,L=[];d=0;for(f=v.faces.length;d<f;d++){g=v.faces[d];y=this.origin.clone();w=this.direction.clone();p=a.matrix.multiplyVector3(E[g.a].position.clone());h=a.matrix.multiplyVector3(E[g.b].position.clone());b=a.matrix.multiplyVector3(E[g.c].position.clone());i=g instanceof THREE.Face4?a.matrix.multiplyVector3(E[g.d].position.clone()):null;k=a.rotationMatrix.multiplyVector3(g.normal.clone());x=w.dot(k);if(x<0){k=k.dot((new THREE.Vector3).sub(p,y))/x;y=y.addSelf(w.multiplyScalar(k));
if(g instanceof THREE.Face3){if(c(y,p,h,b)){g={distance:this.origin.distanceTo(y),point:y,face:g,object:a};L.push(g)}}else if(g instanceof THREE.Face4)if(c(y,p,h,i)||c(y,h,b,i)){g={distance:this.origin.distanceTo(y),point:y,face:g,object:a};L.push(g)}}}return L}};
THREE.Rectangle=function(){function a(){p=f-c;h=g-d}var c,d,f,g,p,h,b=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return p};this.getHeight=function(){return h};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return f};this.getBottom=function(){return g};this.set=function(i,k,x,y){b=false;c=i;d=k;f=x;g=y;a()};this.addPoint=function(i,k){if(b){b=false;c=i;d=k;f=i;g=k}else{c=c<i?c:i;d=d<k?d:k;f=f>i?f:i;g=g>k?
g:k}a()};this.add3Points=function(i,k,x,y,w,v){if(b){b=false;c=i<x?i<w?i:w:x<w?x:w;d=k<y?k<v?k:v:y<v?y:v;f=i>x?i>w?i:w:x>w?x:w;g=k>y?k>v?k:v:y>v?y:v}else{c=i<x?i<w?i<c?i:c:w<c?w:c:x<w?x<c?x:c:w<c?w:c;d=k<y?k<v?k<d?k:d:v<d?v:d:y<v?y<d?y:d:v<d?v:d;f=i>x?i>w?i>f?i:f:w>f?w:f:x>w?x>f?x:f:w>f?w:f;g=k>y?k>v?k>g?k:g:v>g?v:g:y>v?y>g?y:g:v>g?v:g}a()};this.addRectangle=function(i){if(b){b=false;c=i.getLeft();d=i.getTop();f=i.getRight();g=i.getBottom()}else{c=c<i.getLeft()?c:i.getLeft();d=d<i.getTop()?d:i.getTop();
f=f>i.getRight()?f:i.getRight();g=g>i.getBottom()?g:i.getBottom()}a()};this.inflate=function(i){c-=i;d-=i;f+=i;g+=i;a()};this.minSelf=function(i){c=c>i.getLeft()?c:i.getLeft();d=d>i.getTop()?d:i.getTop();f=f<i.getRight()?f:i.getRight();g=g<i.getBottom()?g:i.getBottom();a()};this.instersects=function(i){return Math.min(f,i.getRight())-Math.max(c,i.getLeft())>=0&&Math.min(g,i.getBottom())-Math.max(d,i.getTop())>=0};this.empty=function(){b=true;g=f=d=c=0;a()};this.isEmpty=function(){return b};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+f+", top: "+d+", bottom: "+g+", width: "+p+", height: "+h+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,f,g,p,h,b,i,k,x,y,w,v,E,L){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=f||0;this.n21=g||0;this.n22=p||1;this.n23=h||0;this.n24=b||0;this.n31=i||0;this.n32=k||0;this.n33=x||1;this.n34=y||0;this.n41=w||0;this.n42=v||0;this.n43=E||0;this.n44=L||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,f,g,p,h,b,i,k,x,y,w,v,E,L){this.n11=a;this.n12=c;this.n13=d;this.n14=f;this.n21=g;this.n22=p;this.n23=h;this.n24=b;this.n31=i;this.n32=k;this.n33=x;this.n34=y;this.n41=w;this.n42=v;this.n43=E;this.n44=L;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var f=THREE.Matrix4.__tmpVec1,g=THREE.Matrix4.__tmpVec2,p=THREE.Matrix4.__tmpVec3;p.sub(a,c).normalize();f.cross(d,p).normalize();g.cross(p,f).normalize();this.n11=f.x;this.n12=f.y;this.n13=f.z;this.n14=-f.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);
this.n31=p.x;this.n32=p.y;this.n33=p.z;this.n34=-p.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,f=a.z,g=1/(this.n41*c+this.n42*d+this.n43*f+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*f+this.n14)*g;a.y=(this.n21*c+this.n22*d+this.n23*f+this.n24)*g;a.z=(this.n31*c+this.n32*d+this.n33*f+this.n34)*g;return a},multiplyVector4:function(a){var c=a.x,d=a.y,f=a.z,g=a.w;a.x=this.n11*c+this.n12*d+this.n13*f+this.n14*g;a.y=this.n21*c+this.n22*d+this.n23*
f+this.n24*g;a.z=this.n31*c+this.n32*d+this.n33*f+this.n34*g;a.w=this.n41*c+this.n42*d+this.n43*f+this.n44*g;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,f=a.n12,g=a.n13,p=a.n14,h=a.n21,b=a.n22,i=a.n23,k=a.n24,x=a.n31,
y=a.n32,w=a.n33,v=a.n34,E=a.n41,L=a.n42,R=a.n43,A=a.n44,Q=c.n11,K=c.n12,e=c.n13,j=c.n14,n=c.n21,o=c.n22,q=c.n23,m=c.n24,l=c.n31,r=c.n32,u=c.n33,s=c.n34,t=c.n41,z=c.n42,S=c.n43,I=c.n44;this.n11=d*Q+f*n+g*l+p*t;this.n12=d*K+f*o+g*r+p*z;this.n13=d*e+f*q+g*u+p*S;this.n14=d*j+f*m+g*s+p*I;this.n21=h*Q+b*n+i*l+k*t;this.n22=h*K+b*o+i*r+k*z;this.n23=h*e+b*q+i*u+k*S;this.n24=h*j+b*m+i*s+k*I;this.n31=x*Q+y*n+w*l+v*t;this.n32=x*K+y*o+w*r+v*z;this.n33=x*e+y*q+w*u+v*S;this.n34=x*j+y*m+w*s+v*I;this.n41=E*Q+L*n+
R*l+A*t;this.n42=E*K+L*o+R*r+A*z;this.n43=E*e+L*q+R*u+A*S;this.n44=E*j+L*m+R*s+A*I;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,f=this.n13,g=this.n14,p=this.n21,h=this.n22,b=this.n23,i=this.n24,k=this.n31,x=this.n32,y=this.n33,w=this.n34,v=this.n41,E=this.n42,L=this.n43,R=this.n44,A=a.n11,Q=a.n21,K=a.n31,e=a.n41,j=a.n12,n=a.n22,o=a.n32,q=a.n42,m=a.n13,l=a.n23,r=a.n33,u=a.n43,s=a.n14,t=a.n24,z=a.n34;a=a.n44;this.n11=c*A+d*Q+f*K+g*e;this.n12=c*j+d*n+f*o+g*q;this.n13=c*m+d*l+f*r+g*
u;this.n14=c*s+d*t+f*z+g*a;this.n21=p*A+h*Q+b*K+i*e;this.n22=p*j+h*n+b*o+i*q;this.n23=p*m+h*l+b*r+i*u;this.n24=p*s+h*t+b*z+i*a;this.n31=k*A+x*Q+y*K+w*e;this.n32=k*j+x*n+y*o+w*q;this.n33=k*m+x*l+y*r+w*u;this.n34=k*s+x*t+y*z+w*a;this.n41=v*A+E*Q+L*K+R*e;this.n42=v*j+E*n+L*o+R*q;this.n43=v*m+E*l+L*r+R*u;this.n44=v*s+E*t+L*z+R*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,f=this.n14,g=this.n21,p=this.n22,h=this.n23,b=this.n24,i=this.n31,k=this.n32,x=this.n33,y=this.n34,w=this.n41,v=this.n42,E=this.n43,L=this.n44;return f*h*k*w-d*b*k*w-f*p*x*w+c*b*x*w+d*p*y*w-c*h*y*w-f*h*i*v+d*b*i*v+f*g*x*v-a*b*x*v-d*g*y*v+a*h*y*v+f*p*i*E-c*b*i*E-f*g*k*E+a*b*k*E+c*g*y*E-a*p*y*E-d*p*i*L+c*h*i*L+d*g*k*L-a*h*k*L-c*g*x*L+a*p*x*L},transpose:function(){function a(c,d,
f){var g=c[d];c[d]=c[f];c[f]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setRotationX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotationY:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,
1,0,0,-a,0,c,0,0,0,0,1);return this},setRotationZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,c){var d=Math.cos(c),f=Math.sin(c),g=1-d,p=a.x,h=a.y,b=a.z,i=g*p,k=g*h;this.set(i*p+d,i*h-f*b,i*b+f*h,0,i*h+f*b,k*h+d,k*b-f*p,0,i*b-f*h,k*b+f*p,g*b*b+d,0,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+
this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){return(new THREE.Matrix4).setTranslation(a,c,d)};THREE.Matrix4.rotationXMatrix=function(a){return(new THREE.Matrix4).setRotationX(a)};THREE.Matrix4.rotationYMatrix=function(a){return(new THREE.Matrix4).setRotationY(a)};THREE.Matrix4.rotationZMatrix=function(a){return(new THREE.Matrix4).setRotationZ(a)};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){return(new THREE.Matrix4).setRotationAxis(a,c)};THREE.Matrix4.scaleMatrix=function(a,c,d){return(new THREE.Matrix4).setScale(a,c,d)};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,f=a.n13,g=a.n14,p=a.n21,h=a.n22,b=a.n23,i=a.n24,k=a.n31,x=a.n32,y=a.n33,w=a.n34,v=a.n41,E=a.n42,L=a.n43,R=a.n44,A=new THREE.Matrix4;A.n11=b*w*E-i*y*E+i*x*L-h*w*L-b*x*R+h*y*R;A.n12=g*y*E-f*w*E-g*x*L+d*w*L+f*x*R-d*y*R;A.n13=f*i*E-g*b*E+g*h*L-d*i*L-f*h*R+d*b*R;A.n14=g*b*x-f*i*x-g*h*y+d*i*y+f*h*w-d*b*w;A.n21=i*y*v-b*w*v-i*k*L+p*w*L+b*k*R-p*y*R;A.n22=f*w*v-g*y*v+g*k*L-c*w*L-f*k*R+c*y*R;A.n23=g*b*v-f*i*v-g*p*L+c*i*L+f*p*R-c*b*R;A.n24=f*i*k-g*b*k+
g*p*y-c*i*y-f*p*w+c*b*w;A.n31=h*w*v-i*x*v+i*k*E-p*w*E-h*k*R+p*x*R;A.n32=g*x*v-d*w*v-g*k*E+c*w*E+d*k*R-c*x*R;A.n33=f*i*v-g*h*v+g*p*E-c*i*E-d*p*R+c*h*R;A.n34=g*h*k-d*i*k-g*p*x+c*i*x+d*p*w-c*h*w;A.n41=b*x*v-h*y*v-b*k*E+p*y*E+h*k*L-p*x*L;A.n42=d*y*v-f*x*v+f*k*E-c*y*E-d*k*L+c*x*L;A.n43=f*h*v-d*b*v-f*p*E+c*b*E+d*p*L-c*h*L;A.n44=d*b*k-f*h*k+f*p*x-c*b*x-d*p*y+c*h*y;A.multiplyScalar(1/a.determinant());return A};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,f=c[10]*c[5]-c[6]*c[9],g=-c[10]*c[1]+c[2]*c[9],p=c[6]*c[1]-c[2]*c[5],h=-c[10]*c[4]+c[6]*c[8],b=c[10]*c[0]-c[2]*c[8],i=-c[6]*c[0]+c[2]*c[4],k=c[9]*c[4]-c[5]*c[8],x=-c[9]*c[0]+c[1]*c[8],y=c[5]*c[0]-c[1]*c[4];c=c[0]*f+c[1]*h+c[2]*k;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*f;d[1]=c*g;d[2]=c*p;d[3]=c*h;d[4]=c*b;d[5]=c*i;d[6]=c*k;d[7]=c*x;d[8]=c*y;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,f,g,p){var h,b,i;h=new THREE.Matrix4;b=2*g/(c-a);i=2*g/(f-d);a=(c+a)/(c-a);d=(f+d)/(f-d);f=-(p+g)/(p-g);g=-2*p*g/(p-g);h.n11=b;h.n12=0;h.n13=a;h.n14=0;h.n21=0;h.n22=i;h.n23=d;h.n24=0;h.n31=0;h.n32=0;h.n33=f;h.n34=g;h.n41=0;h.n42=0;h.n43=-1;h.n44=0;return h};THREE.Matrix4.makePerspective=function(a,c,d,f){var g;a=d*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*c,a*c,g,a,d,f)};
THREE.Matrix4.makeOrtho=function(a,c,d,f,g,p){var h,b,i,k;h=new THREE.Matrix4;b=c-a;i=d-f;k=p-g;a=(c+a)/b;d=(d+f)/i;g=(p+g)/k;h.n11=2/b;h.n12=0;h.n13=0;h.n14=-a;h.n21=0;h.n22=2/i;h.n23=0;h.n24=-d;h.n31=0;h.n32=0;h.n33=-2/k;h.n34=-g;h.n41=0;h.n42=0;h.n43=0;h.n44=1;return h};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,f,g){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,f,g,p){this.a=a;this.b=c;this.c=d;this.d=f;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=p instanceof Array?p:[p]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,f,g,p,h,b=new THREE.Vector3,i=new THREE.Vector3;f=0;for(g=this.vertices.length;f<g;f++){p=this.vertices[f];p.normal.set(0,0,0)}f=0;for(g=this.faces.length;f<g;f++){p=this.faces[f];if(a&&p.vertexNormals.length){b.set(0,0,0);c=0;for(d=p.normal.length;c<d;c++)b.addSelf(p.vertexNormals[c]);b.divideScalar(3)}else{c=this.vertices[p.a];d=this.vertices[p.b];h=this.vertices[p.c];b.sub(h.position,
d.position);i.sub(c.position,d.position);b.crossSelf(i)}b.isZero()||b.normalize();p.normal.copy(b)}},computeVertexNormals:function(){var a,c,d,f;if(this.__tmpVertices==undefined){f=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)f[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{f=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)f[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){f[d.a].addSelf(d.normal);f[d.b].addSelf(d.normal);f[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){f[d.a].addSelf(d.normal);f[d.b].addSelf(d.normal);f[d.c].addSelf(d.normal);f[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)f[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(f[d.a]);d.vertexNormals[1].copy(f[d.b]);d.vertexNormals[2].copy(f[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(f[d.a]);d.vertexNormals[1].copy(f[d.b]);d.vertexNormals[2].copy(f[d.c]);d.vertexNormals[3].copy(f[d.d])}}},computeTangents:function(){function a(s,t,z,S,I,G,W){p=s.vertices[t].position;h=s.vertices[z].position;b=s.vertices[S].position;i=g[I];k=g[G];x=g[W];y=h.x-p.x;w=b.x-p.x;v=h.y-p.y;E=b.y-p.y;
L=h.z-p.z;R=b.z-p.z;A=k.u-i.u;Q=x.u-i.u;K=k.v-i.v;e=x.v-i.v;j=1/(A*e-Q*K);q.set((e*y-K*w)*j,(e*v-K*E)*j,(e*L-K*R)*j);m.set((A*w-Q*y)*j,(A*E-Q*v)*j,(A*R-Q*L)*j);n[t].addSelf(q);n[z].addSelf(q);n[S].addSelf(q);o[t].addSelf(m);o[z].addSelf(m);o[S].addSelf(m)}var c,d,f,g,p,h,b,i,k,x,y,w,v,E,L,R,A,Q,K,e,j,n=[],o=[],q=new THREE.Vector3,m=new THREE.Vector3,l=new THREE.Vector3,r=new THREE.Vector3,u=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){n[c]=new THREE.Vector3;o[c]=new THREE.Vector3}c=0;
for(d=this.faces.length;c<d;c++){f=this.faces[c];g=this.uvs[c];if(f instanceof THREE.Face3){a(this,f.a,f.b,f.c,0,1,2);this.vertices[f.a].normal.copy(f.vertexNormals[0]);this.vertices[f.b].normal.copy(f.vertexNormals[1]);this.vertices[f.c].normal.copy(f.vertexNormals[2])}else if(f instanceof THREE.Face4){a(this,f.a,f.b,f.c,0,1,2);a(this,f.a,f.b,f.d,0,1,3);this.vertices[f.a].normal.copy(f.vertexNormals[0]);this.vertices[f.b].normal.copy(f.vertexNormals[1]);this.vertices[f.c].normal.copy(f.vertexNormals[2]);
this.vertices[f.d].normal.copy(f.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){u.copy(this.vertices[c].normal);f=n[c];l.copy(f);l.subSelf(u.multiplyScalar(u.dot(f))).normalize();r.cross(this.vertices[c].normal,f);f=r.dot(o[c]);f=f<0?-1:1;this.vertices[c].tangent.set(l.x,l.y,l.z,f)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(x){var y=[];c=0;for(d=x.length;c<d;c++)x[c]==undefined?y.push("undefined"):y.push(x[c].toString());return y.join("_")}var c,d,f,g,p,h,b,i,k={};f=0;for(g=this.faces.length;f<g;f++){p=this.faces[f];
h=p.materials;b=a(h);if(k[b]==undefined)k[b]={hash:b,counter:0};i=k[b].hash+"_"+k[b].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:h,vertices:0};p=p instanceof THREE.Face3?3:4;if(this.geometryChunks[i].vertices+p>65535){k[b].counter+=1;i=k[b].hash+"_"+k[b].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:h,vertices:0}}this.geometryChunks[i].faces.push(f);this.geometryChunks[i].vertices+=p}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,f){this.fov=a;this.aspect=c;this.near=d;this.far=f;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(g){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(g);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(g){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(g);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true;this.children=[]};
THREE.Object3D.prototype={addChild:function(a){this.children.indexOf(a)===-1&&this.children.push(a)},removeChild:function(a){a=this.children.indexOf(a);a!==-1&&this.children.splice(a,1)},updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,f=this.matrix,g=this.rotationMatrix,p=this.tmpMatrix;f.setTranslation(a.x,a.y,a.z);g.setRotationX(c.x);c.y!=0&&g.multiplySelf(p.setRotationY(c.y));c.z!=0&&g.multiplySelf(p.setRotationZ(c.z));f.multiplySelf(g);if(d.x!=0||d.y!=0||d.z!=0)f.multiplySelf(p.setScale(d.x,
d.y,d.z))}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.autoUpdateMatrix=false};THREE.ParticleSystem.prototype=new THREE.Object3D;
THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,d,f,g,p){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=f!==undefined?f:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=p!==undefined?p:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,f,g={};for(c in a){g[c]={};for(d in a[c]){f=a[c][d];g[c][d]=f instanceof THREE.Color||f instanceof THREE.Vector3||f instanceof THREE.Texture?f.clone():f}}return g},merge:function(a){var c,d,f,g={};for(c=0;c<a.length;c++){f=this.clone(a[c]);for(d in f)g[d]=f[d]}return g}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(q,m){var l,r,u;if(q.visible){if(l=q instanceof THREE.Mesh)a:{r=q.matrix;u=-q.geometry.boundingSphere.radius*Math.max(q.scale.x,Math.max(q.scale.y,q.scale.z));for(var s=0;s<6;s++){l=e[s].x*r.n14+e[s].y*r.n24+e[s].z*r.n34+e[s].w;if(l<=u){l=false;break a}}l=true}if(l||q instanceof THREE.Line||q instanceof THREE.Particle){f=p[g]=p[g]||new THREE.RenderableObject;R.copy(q.position);Q.multiplyVector3(R);f.object=q;f.z=R.z;m.push(f);g++}l=0;for(r=q.children.length;l<
r;l++){u=q.children[l];u.autoUpdateMatrix&&u.updateMatrix();u.matrixWorld.multiply(q.matrixWorld,u.matrix);a(u,m)}}}function c(q,m){return m.z-q.z}function d(q,m){var l=0,r=1,u=q.z+q.w,s=m.z+m.w,t=-q.z+q.w,z=-m.z+m.w;if(u>=0&&s>=0&&t>=0&&z>=0)return true;else if(u<0&&s<0||t<0&&z<0)return false;else{if(u<0)l=Math.max(l,u/(u-s));else if(s<0)r=Math.min(r,u/(u-s));if(t<0)l=Math.max(l,t/(t-z));else if(z<0)r=Math.min(r,t/(t-z));if(r<l)return false;else{q.lerpSelf(m,l);m.lerpSelf(q,1-r);return true}}}var f,
g,p=[],h,b,i,k=[],x,y,w=[],v,E,L=[],R=new THREE.Vector4,A=new THREE.Vector4,Q=new THREE.Matrix4,K=new THREE.Matrix4,e=[],j=new THREE.Vector4,n=new THREE.Vector4,o;this.projectObjects=function(q,m,l){var r=[],u,s;q=q.objects;g=0;Q.multiply(m.projectionMatrix,m.matrix);m=Q;e[0]=new THREE.Vector4(m.n41-m.n11,m.n42-m.n12,m.n43-m.n13,m.n44-m.n14);e[1]=new THREE.Vector4(m.n41+m.n11,m.n42+m.n12,m.n43+m.n13,m.n44+m.n14);e[2]=new THREE.Vector4(m.n41+m.n21,m.n42+m.n22,m.n43+m.n23,m.n44+m.n24);e[3]=new THREE.Vector4(m.n41-
m.n21,m.n42-m.n22,m.n43-m.n23,m.n44-m.n24);e[4]=new THREE.Vector4(m.n41-m.n31,m.n42-m.n32,m.n43-m.n33,m.n44-m.n34);e[5]=new THREE.Vector4(m.n41+m.n31,m.n42+m.n32,m.n43+m.n33,m.n44+m.n34);m=0;for(u=e.length;m<u;m++){s=e[m];s.divideScalar(Math.sqrt(s.x*s.x+s.y*s.y+s.z*s.z))}m=0;for(u=q.length;m<u;m++){s=q[m];s.autoUpdateMatrix&&s.updateMatrix();s.matrixWorld.copy(s.matrix);a(s,r)}l&&r.sort(c);return r};this.projectScene=function(q,m,l){var r=[],u=m.near,s=m.far,t,z,S,I,G,W,J,O,H,M,U,V,B,F,N,aa;i=y=
E=0;m.autoUpdateMatrix&&m.updateMatrix();Q.multiply(m.projectionMatrix,m.matrix);W=this.projectObjects(q,m,true);q=0;for(t=W.length;q<t;q++){J=W[q].object;if(J.visible){J.autoUpdateMatrix&&J.updateMatrix();O=J.matrix;H=J.rotationMatrix;M=J.materials;U=J.overdraw;if(J instanceof THREE.Mesh){V=J.geometry;B=V.vertices;z=0;for(S=B.length;z<S;z++){F=B[z];F.positionWorld.copy(F.position);O.multiplyVector3(F.positionWorld);I=F.positionScreen;I.copy(F.positionWorld);Q.multiplyVector4(I);I.x/=I.w;I.y/=I.w;
F.__visible=I.z>u&&I.z<s}V=V.faces;z=0;for(S=V.length;z<S;z++){F=V[z];if(F instanceof THREE.Face3){I=B[F.a];G=B[F.b];N=B[F.c];if(I.__visible&&G.__visible&&N.__visible)if(J.doubleSided||J.flipSided!=(N.positionScreen.x-I.positionScreen.x)*(G.positionScreen.y-I.positionScreen.y)-(N.positionScreen.y-I.positionScreen.y)*(G.positionScreen.x-I.positionScreen.x)<0){h=k[i]=k[i]||new THREE.RenderableFace3;h.v1.positionWorld.copy(I.positionWorld);h.v2.positionWorld.copy(G.positionWorld);h.v3.positionWorld.copy(N.positionWorld);
h.v1.positionScreen.copy(I.positionScreen);h.v2.positionScreen.copy(G.positionScreen);h.v3.positionScreen.copy(N.positionScreen);h.normalWorld.copy(F.normal);H.multiplyVector3(h.normalWorld);h.centroidWorld.copy(F.centroid);O.multiplyVector3(h.centroidWorld);h.centroidScreen.copy(h.centroidWorld);Q.multiplyVector3(h.centroidScreen);N=F.vertexNormals;o=h.vertexNormalsWorld;I=0;for(G=N.length;I<G;I++){aa=o[I]=o[I]||new THREE.Vector3;aa.copy(N[I]);H.multiplyVector3(aa)}h.z=h.centroidScreen.z;h.meshMaterials=
M;h.faceMaterials=F.materials;h.overdraw=U;if(J.geometry.uvs[z]){h.uvs[0]=J.geometry.uvs[z][0];h.uvs[1]=J.geometry.uvs[z][1];h.uvs[2]=J.geometry.uvs[z][2]}r.push(h);i++}}else if(F instanceof THREE.Face4){I=B[F.a];G=B[F.b];N=B[F.c];aa=B[F.d];if(I.__visible&&G.__visible&&N.__visible&&aa.__visible)if(J.doubleSided||J.flipSided!=((aa.positionScreen.x-I.positionScreen.x)*(G.positionScreen.y-I.positionScreen.y)-(aa.positionScreen.y-I.positionScreen.y)*(G.positionScreen.x-I.positionScreen.x)<0||(G.positionScreen.x-
N.positionScreen.x)*(aa.positionScreen.y-N.positionScreen.y)-(G.positionScreen.y-N.positionScreen.y)*(aa.positionScreen.x-N.positionScreen.x)<0)){h=k[i]=k[i]||new THREE.RenderableFace3;h.v1.positionWorld.copy(I.positionWorld);h.v2.positionWorld.copy(G.positionWorld);h.v3.positionWorld.copy(aa.positionWorld);h.v1.positionScreen.copy(I.positionScreen);h.v2.positionScreen.copy(G.positionScreen);h.v3.positionScreen.copy(aa.positionScreen);h.normalWorld.copy(F.normal);H.multiplyVector3(h.normalWorld);
h.centroidWorld.copy(F.centroid);O.multiplyVector3(h.centroidWorld);h.centroidScreen.copy(h.centroidWorld);Q.multiplyVector3(h.centroidScreen);h.z=h.centroidScreen.z;h.meshMaterials=M;h.faceMaterials=F.materials;h.overdraw=U;if(J.geometry.uvs[z]){h.uvs[0]=J.geometry.uvs[z][0];h.uvs[1]=J.geometry.uvs[z][1];h.uvs[2]=J.geometry.uvs[z][3]}r.push(h);i++;b=k[i]=k[i]||new THREE.RenderableFace3;b.v1.positionWorld.copy(G.positionWorld);b.v2.positionWorld.copy(N.positionWorld);b.v3.positionWorld.copy(aa.positionWorld);
b.v1.positionScreen.copy(G.positionScreen);b.v2.positionScreen.copy(N.positionScreen);b.v3.positionScreen.copy(aa.positionScreen);b.normalWorld.copy(h.normalWorld);b.centroidWorld.copy(h.centroidWorld);b.centroidScreen.copy(h.centroidScreen);b.z=b.centroidScreen.z;b.meshMaterials=M;b.faceMaterials=F.materials;b.overdraw=U;if(J.geometry.uvs[z]){b.uvs[0]=J.geometry.uvs[z][1];b.uvs[1]=J.geometry.uvs[z][2];b.uvs[2]=J.geometry.uvs[z][3]}r.push(b);i++}}}}else if(J instanceof THREE.Line){K.multiply(Q,O);
B=J.geometry.vertices;F=B[0];F.positionScreen.copy(F.position);K.multiplyVector4(F.positionScreen);z=1;for(S=B.length;z<S;z++){I=B[z];I.positionScreen.copy(I.position);K.multiplyVector4(I.positionScreen);G=B[z-1];j.copy(I.positionScreen);n.copy(G.positionScreen);if(d(j,n)){j.multiplyScalar(1/j.w);n.multiplyScalar(1/n.w);x=w[y]=w[y]||new THREE.RenderableLine;x.v1.positionScreen.copy(j);x.v2.positionScreen.copy(n);x.z=Math.max(j.z,n.z);x.materials=J.materials;r.push(x);y++}}}else if(J instanceof THREE.Particle){A.set(J.position.x,
J.position.y,J.position.z,1);Q.multiplyVector4(A);A.z/=A.w;if(A.z>0&&A.z<1){v=L[E]=L[E]||new THREE.RenderableParticle;v.x=A.x/A.w;v.y=A.y/A.w;v.z=A.z;v.rotation=J.rotation.z;v.scale.x=J.scale.x*Math.abs(v.x-(A.x+m.projectionMatrix.n11)/(A.w+m.projectionMatrix.n14));v.scale.y=J.scale.y*Math.abs(v.y-(A.y+m.projectionMatrix.n22)/(A.w+m.projectionMatrix.n24));v.materials=J.materials;r.push(v);E++}}}}l&&r.sort(c);return r};this.unprojectVector=function(q,m){var l=THREE.Matrix4.makeInvert(m.matrix);l.multiplySelf(THREE.Matrix4.makeInvert(m.projectionMatrix));
l.multiplyVector3(q);return q}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,f,g,p;this.domElement=document.createElement("div");this.setSize=function(h,b){d=h;f=b;g=d/2;p=f/2};this.render=function(h,b){var i,k,x,y,w,v,E,L;a=c.projectScene(h,b);i=0;for(k=a.length;i<k;i++){w=a[i];if(w instanceof THREE.RenderableParticle){E=w.x*g+g;L=w.y*p+p;x=0;for(y=w.material.length;x<y;x++){v=w.material[x];if(v instanceof THREE.ParticleDOMMaterial){v=v.domElement;v.style.left=E+"px";v.style.top=L+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ea){if(w!=ea)k.globalAlpha=w=ea}function c(ea){if(v!=ea){switch(ea){case THREE.NormalBlending:k.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:k.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:k.globalCompositeOperation="darker"}v=ea}}var d=null,f=new THREE.Projector,g=document.createElement("canvas"),p,h,b,i,k=g.getContext("2d"),x=null,y=null,w=1,v=0,E=null,L=null,R=1,A,Q,K,e,j,n,o,q,m,l=new THREE.Color,
r=new THREE.Color,u=new THREE.Color,s=new THREE.Color,t=new THREE.Color,z,S,I,G,W,J,O,H,M,U=new THREE.Rectangle,V=new THREE.Rectangle,B=new THREE.Rectangle,F=false,N=new THREE.Color,aa=new THREE.Color,ca=new THREE.Color,Z=new THREE.Color,ja=Math.PI*2,Y=new THREE.Vector3,qa,ka,fa,ha,sa,ua,va=16;qa=document.createElement("canvas");qa.width=qa.height=2;ka=qa.getContext("2d");ka.fillStyle="rgba(0,0,0,1)";ka.fillRect(0,0,2,2);fa=ka.getImageData(0,0,2,2);ha=fa.data;sa=document.createElement("canvas");sa.width=
sa.height=va;ua=sa.getContext("2d");ua.translate(-va/2,-va/2);ua.scale(va,va);va--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ea,ra){p=ea;h=ra;b=p/2;i=h/2;g.width=p;g.height=h;U.set(-b,-i,b,i);w=1;v=0;L=E=null;R=1};this.setClearColor=function(ea,ra){x=ea!==null?new THREE.Color(ea):null;y=ra;V.set(-b,-i,b,i);k.setTransform(1,0,0,-1,b,i);this.clear()};this.clear=function(){if(!V.isEmpty()){V.inflate(1);V.minSelf(U);if(x!==null){c(THREE.NormalBlending);
a(1);k.fillStyle="rgba("+Math.floor(x.r*255)+","+Math.floor(x.g*255)+","+Math.floor(x.b*255)+","+y+")";k.fillRect(V.getX(),V.getY(),V.getWidth(),V.getHeight())}else k.clearRect(V.getX(),V.getY(),V.getWidth(),V.getHeight());V.empty()}};this.render=function(ea,ra){function Ma(C){var X,T,D,P=C.lights;aa.setRGB(0,0,0);ca.setRGB(0,0,0);Z.setRGB(0,0,0);C=0;for(X=P.length;C<X;C++){T=P[C];D=T.color;if(T instanceof THREE.AmbientLight){aa.r+=D.r;aa.g+=D.g;aa.b+=D.b}else if(T instanceof THREE.DirectionalLight){ca.r+=
D.r;ca.g+=D.g;ca.b+=D.b}else if(T instanceof THREE.PointLight){Z.r+=D.r;Z.g+=D.g;Z.b+=D.b}}}function Aa(C,X,T,D){var P,$,da,ga,ia=C.lights;C=0;for(P=ia.length;C<P;C++){$=ia[C];da=$.color;ga=$.intensity;if($ instanceof THREE.DirectionalLight){$=T.dot($.position)*ga;if($>0){D.r+=da.r*$;D.g+=da.g*$;D.b+=da.b*$}}else if($ instanceof THREE.PointLight){Y.sub($.position,X);Y.normalize();$=T.dot(Y)*ga;if($>0){D.r+=da.r*$;D.g+=da.g*$;D.b+=da.b*$}}}}function Na(C,X,T){if(T.opacity!=0){a(T.opacity);c(T.blending);
var D,P,$,da,ga,ia;if(T instanceof THREE.ParticleBasicMaterial){if(T.map){da=T.map;ga=da.width>>1;ia=da.height>>1;P=X.scale.x*b;$=X.scale.y*i;T=P*ga;D=$*ia;B.set(C.x-T,C.y-D,C.x+T,C.y+D);if(U.instersects(B)){k.save();k.translate(C.x,C.y);k.rotate(-X.rotation);k.scale(P,-$);k.translate(-ga,-ia);k.drawImage(da,0,0);k.restore()}}}else if(T instanceof THREE.ParticleCircleMaterial){if(F){N.r=aa.r+ca.r+Z.r;N.g=aa.g+ca.g+Z.g;N.b=aa.b+ca.b+Z.b;l.r=T.color.r*N.r;l.g=T.color.g*N.g;l.b=T.color.b*N.b;l.updateStyleString()}else l.__styleString=
T.color.__styleString;T=X.scale.x*b;D=X.scale.y*i;B.set(C.x-T,C.y-D,C.x+T,C.y+D);if(U.instersects(B)){P=l.__styleString;if(L!=P)k.fillStyle=L=P;k.save();k.translate(C.x,C.y);k.rotate(-X.rotation);k.scale(T,D);k.beginPath();k.arc(0,0,1,0,ja,true);k.closePath();k.fill();k.restore()}}}}function Oa(C,X,T,D){if(D.opacity!=0){a(D.opacity);c(D.blending);k.beginPath();k.moveTo(C.positionScreen.x,C.positionScreen.y);k.lineTo(X.positionScreen.x,X.positionScreen.y);k.closePath();if(D instanceof THREE.LineBasicMaterial){l.__styleString=
D.color.__styleString;C=D.linewidth;if(R!=C)k.lineWidth=R=C;C=l.__styleString;if(E!=C)k.strokeStyle=E=C;k.stroke();B.inflate(D.linewidth*2)}}}function Ia(C,X,T,D,P,$){if(P.opacity!=0){a(P.opacity);c(P.blending);e=C.positionScreen.x;j=C.positionScreen.y;n=X.positionScreen.x;o=X.positionScreen.y;q=T.positionScreen.x;m=T.positionScreen.y;k.beginPath();k.moveTo(e,j);k.lineTo(n,o);k.lineTo(q,m);k.lineTo(e,j);k.closePath();if(P instanceof THREE.MeshBasicMaterial)if(P.map)P.map.image.loaded&&P.map.mapping instanceof
THREE.UVMapping&&xa(e,j,n,o,q,m,P.map.image,D.uvs[0].u,D.uvs[0].v,D.uvs[1].u,D.uvs[1].v,D.uvs[2].u,D.uvs[2].v);else if(P.env_map){if(P.env_map.image.loaded)if(P.env_map.mapping instanceof THREE.SphericalReflectionMapping){C=ra.matrix;Y.copy(D.vertexNormalsWorld[0]);G=(Y.x*C.n11+Y.y*C.n12+Y.z*C.n13)*0.5+0.5;W=-(Y.x*C.n21+Y.y*C.n22+Y.z*C.n23)*0.5+0.5;Y.copy(D.vertexNormalsWorld[1]);J=(Y.x*C.n11+Y.y*C.n12+Y.z*C.n13)*0.5+0.5;O=-(Y.x*C.n21+Y.y*C.n22+Y.z*C.n23)*0.5+0.5;Y.copy(D.vertexNormalsWorld[2]);H=
(Y.x*C.n11+Y.y*C.n12+Y.z*C.n13)*0.5+0.5;M=-(Y.x*C.n21+Y.y*C.n22+Y.z*C.n23)*0.5+0.5;xa(e,j,n,o,q,m,P.env_map.image,G,W,J,O,H,M)}}else P.wireframe?Ba(P.color.__styleString,P.wireframe_linewidth):Ca(P.color.__styleString);else if(P instanceof THREE.MeshLambertMaterial){if(P.map&&!P.wireframe){P.map.mapping instanceof THREE.UVMapping&&xa(e,j,n,o,q,m,P.map.image,D.uvs[0].u,D.uvs[0].v,D.uvs[1].u,D.uvs[1].v,D.uvs[2].u,D.uvs[2].v);c(THREE.SubtractiveBlending)}if(F)if(!P.wireframe&&P.shading==THREE.SmoothShading&&
D.vertexNormalsWorld.length==3){r.r=u.r=s.r=aa.r;r.g=u.g=s.g=aa.g;r.b=u.b=s.b=aa.b;Aa($,D.v1.positionWorld,D.vertexNormalsWorld[0],r);Aa($,D.v2.positionWorld,D.vertexNormalsWorld[1],u);Aa($,D.v3.positionWorld,D.vertexNormalsWorld[2],s);t.r=(u.r+s.r)*0.5;t.g=(u.g+s.g)*0.5;t.b=(u.b+s.b)*0.5;I=Ja(r,u,s,t);xa(e,j,n,o,q,m,I,0,0,1,0,0,1)}else{N.r=aa.r;N.g=aa.g;N.b=aa.b;Aa($,D.centroidWorld,D.normalWorld,N);l.r=P.color.r*N.r;l.g=P.color.g*N.g;l.b=P.color.b*N.b;l.updateStyleString();P.wireframe?Ba(l.__styleString,
P.wireframe_linewidth):Ca(l.__styleString)}else P.wireframe?Ba(P.color.__styleString,P.wireframe_linewidth):Ca(P.color.__styleString)}else if(P instanceof THREE.MeshDepthMaterial){z=ra.near;S=ra.far;r.r=r.g=r.b=1-Ea(C.positionScreen.z,z,S);u.r=u.g=u.b=1-Ea(X.positionScreen.z,z,S);s.r=s.g=s.b=1-Ea(T.positionScreen.z,z,S);t.r=(u.r+s.r)*0.5;t.g=(u.g+s.g)*0.5;t.b=(u.b+s.b)*0.5;I=Ja(r,u,s,t);xa(e,j,n,o,q,m,I,0,0,1,0,0,1)}else if(P instanceof THREE.MeshNormalMaterial){l.r=Fa(D.normalWorld.x);l.g=Fa(D.normalWorld.y);
l.b=Fa(D.normalWorld.z);l.updateStyleString();P.wireframe?Ba(l.__styleString,P.wireframe_linewidth):Ca(l.__styleString)}}}function Ba(C,X){if(E!=C)k.strokeStyle=E=C;if(R!=X)k.lineWidth=R=X;k.stroke();B.inflate(X*2)}function Ca(C){if(L!=C)k.fillStyle=L=C;k.fill()}function xa(C,X,T,D,P,$,da,ga,ia,na,la,oa,ya){var ta,pa;ta=da.width-1;pa=da.height-1;ga*=ta;ia*=pa;na*=ta;la*=pa;oa*=ta;ya*=pa;T-=C;D-=X;P-=C;$-=X;na-=ga;la-=ia;oa-=ga;ya-=ia;pa=1/(na*ya-oa*la);ta=(ya*T-la*P)*pa;la=(ya*D-la*$)*pa;T=(na*P-
oa*T)*pa;D=(na*$-oa*D)*pa;C=C-ta*ga-T*ia;X=X-la*ga-D*ia;k.save();k.transform(ta,la,T,D,C,X);k.clip();k.drawImage(da,0,0);k.restore()}function Ja(C,X,T,D){var P=~~(C.r*255),$=~~(C.g*255);C=~~(C.b*255);var da=~~(X.r*255),ga=~~(X.g*255);X=~~(X.b*255);var ia=~~(T.r*255),na=~~(T.g*255);T=~~(T.b*255);var la=~~(D.r*255),oa=~~(D.g*255);D=~~(D.b*255);ha[0]=P<0?0:P>255?255:P;ha[1]=$<0?0:$>255?255:$;ha[2]=C<0?0:C>255?255:C;ha[4]=da<0?0:da>255?255:da;ha[5]=ga<0?0:ga>255?255:ga;ha[6]=X<0?0:X>255?255:X;ha[8]=ia<
0?0:ia>255?255:ia;ha[9]=na<0?0:na>255?255:na;ha[10]=T<0?0:T>255?255:T;ha[12]=la<0?0:la>255?255:la;ha[13]=oa<0?0:oa>255?255:oa;ha[14]=D<0?0:D>255?255:D;ka.putImageData(fa,0,0);ua.drawImage(qa,0,0);return sa}function Ea(C,X,T){C=(C-X)/(T-X);return C*C*(3-2*C)}function Fa(C){C=(C+1)*0.5;return C<0?0:C>1?1:C}function Ga(C,X){var T=X.x-C.x,D=X.y-C.y,P=1/Math.sqrt(T*T+D*D);T*=P;D*=P;X.x+=T;X.y+=D;C.x-=T;C.y-=D}var Da,Ka,ba,ma,wa,Ha,La,za;k.setTransform(1,0,0,-1,b,i);this.autoClear&&this.clear();d=f.projectScene(ea,
ra,this.sortElements);(F=ea.lights.length>0)&&Ma(ea);Da=0;for(Ka=d.length;Da<Ka;Da++){ba=d[Da];B.empty();if(ba instanceof THREE.RenderableParticle){A=ba;A.x*=b;A.y*=i;ma=0;for(wa=ba.materials.length;ma<wa;ma++)Na(A,ba,ba.materials[ma],ea)}else if(ba instanceof THREE.RenderableLine){A=ba.v1;Q=ba.v2;A.positionScreen.x*=b;A.positionScreen.y*=i;Q.positionScreen.x*=b;Q.positionScreen.y*=i;B.addPoint(A.positionScreen.x,A.positionScreen.y);B.addPoint(Q.positionScreen.x,Q.positionScreen.y);if(U.instersects(B)){ma=
0;for(wa=ba.materials.length;ma<wa;)Oa(A,Q,ba,ba.materials[ma++],ea)}}else if(ba instanceof THREE.RenderableFace3){A=ba.v1;Q=ba.v2;K=ba.v3;A.positionScreen.x*=b;A.positionScreen.y*=i;Q.positionScreen.x*=b;Q.positionScreen.y*=i;K.positionScreen.x*=b;K.positionScreen.y*=i;if(ba.overdraw){Ga(A.positionScreen,Q.positionScreen);Ga(Q.positionScreen,K.positionScreen);Ga(K.positionScreen,A.positionScreen)}B.add3Points(A.positionScreen.x,A.positionScreen.y,Q.positionScreen.x,Q.positionScreen.y,K.positionScreen.x,
K.positionScreen.y);if(U.instersects(B)){ma=0;for(wa=ba.meshMaterials.length;ma<wa;){za=ba.meshMaterials[ma++];if(za instanceof THREE.MeshFaceMaterial){Ha=0;for(La=ba.faceMaterials.length;Ha<La;)(za=ba.faceMaterials[Ha++])&&Ia(A,Q,K,ba,za,ea)}else Ia(A,Q,K,ba,za,ea)}}}V.addRectangle(B)}k.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(G,W,J){var O,H,M,U;O=0;for(H=G.lights.length;O<H;O++){M=G.lights[O];if(M instanceof THREE.DirectionalLight){U=W.normalWorld.dot(M.position)*M.intensity;if(U>0){J.r+=M.color.r*U;J.g+=M.color.g*U;J.b+=M.color.b*U}}else if(M instanceof THREE.PointLight){m.sub(M.position,W.centroidWorld);m.normalize();U=W.normalWorld.dot(m)*M.intensity;if(U>0){J.r+=M.color.r*U;J.g+=M.color.g*U;J.b+=M.color.b*U}}}}function c(G,W,J,O,H,M){s=f(t++);s.setAttribute("d","M "+G.positionScreen.x+
" "+G.positionScreen.y+" L "+W.positionScreen.x+" "+W.positionScreen.y+" L "+J.positionScreen.x+","+J.positionScreen.y+"z");if(H instanceof THREE.MeshBasicMaterial)K.__styleString=H.color.__styleString;else if(H instanceof THREE.MeshLambertMaterial)if(Q){e.r=j.r;e.g=j.g;e.b=j.b;a(M,O,e);K.r=H.color.r*e.r;K.g=H.color.g*e.g;K.b=H.color.b*e.b;K.updateStyleString()}else K.__styleString=H.color.__styleString;else if(H instanceof THREE.MeshDepthMaterial){q=1-H.__2near/(H.__farPlusNear-O.z*H.__farMinusNear);
K.setRGB(q,q,q)}else H instanceof THREE.MeshNormalMaterial&&K.setRGB(g(O.normalWorld.x),g(O.normalWorld.y),g(O.normalWorld.z));H.wireframe?s.setAttribute("style","fill: none; stroke: "+K.__styleString+"; stroke-width: "+H.wireframe_linewidth+"; stroke-opacity: "+H.opacity+"; stroke-linecap: "+H.wireframe_linecap+"; stroke-linejoin: "+H.wireframe_linejoin):s.setAttribute("style","fill: "+K.__styleString+"; fill-opacity: "+H.opacity);b.appendChild(s)}function d(G,W,J,O,H,M,U){s=f(t++);s.setAttribute("d",
"M "+G.positionScreen.x+" "+G.positionScreen.y+" L "+W.positionScreen.x+" "+W.positionScreen.y+" L "+J.positionScreen.x+","+J.positionScreen.y+" L "+O.positionScreen.x+","+O.positionScreen.y+"z");if(M instanceof THREE.MeshBasicMaterial)K.__styleString=M.color.__styleString;else if(M instanceof THREE.MeshLambertMaterial)if(Q){e.r=j.r;e.g=j.g;e.b=j.b;a(U,H,e);K.r=M.color.r*e.r;K.g=M.color.g*e.g;K.b=M.color.b*e.b;K.updateStyleString()}else K.__styleString=M.color.__styleString;else if(M instanceof THREE.MeshDepthMaterial){q=
1-M.__2near/(M.__farPlusNear-H.z*M.__farMinusNear);K.setRGB(q,q,q)}else M instanceof THREE.MeshNormalMaterial&&K.setRGB(g(H.normalWorld.x),g(H.normalWorld.y),g(H.normalWorld.z));M.wireframe?s.setAttribute("style","fill: none; stroke: "+K.__styleString+"; stroke-width: "+M.wireframe_linewidth+"; stroke-opacity: "+M.opacity+"; stroke-linecap: "+M.wireframe_linecap+"; stroke-linejoin: "+M.wireframe_linejoin):s.setAttribute("style","fill: "+K.__styleString+"; fill-opacity: "+M.opacity);b.appendChild(s)}
function f(G){if(l[G]==null){l[G]=document.createElementNS("http://www.w3.org/2000/svg","path");I==0&&l[G].setAttribute("shape-rendering","crispEdges");return l[G]}return l[G]}function g(G){return G<0?Math.min((1+G)*0.5,0.5):0.5+Math.min(G*0.5,0.5)}var p=null,h=new THREE.Projector,b=document.createElementNS("http://www.w3.org/2000/svg","svg"),i,k,x,y,w,v,E,L,R=new THREE.Rectangle,A=new THREE.Rectangle,Q=false,K=new THREE.Color(16777215),e=new THREE.Color(16777215),j=new THREE.Color(0),n=new THREE.Color(0),
o=new THREE.Color(0),q,m=new THREE.Vector3,l=[],r=[],u=[],s,t,z,S,I=1;this.domElement=b;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(G){switch(G){case "high":I=1;break;case "low":I=0}};this.setSize=function(G,W){i=G;k=W;x=i/2;y=k/2;b.setAttribute("viewBox",-x+" "+-y+" "+i+" "+k);b.setAttribute("width",i);b.setAttribute("height",k);R.set(-x,-y,x,y)};this.clear=function(){for(;b.childNodes.length>0;)b.removeChild(b.childNodes[0])};this.render=function(G,W){var J,O,
H,M,U,V,B,F;this.autoClear&&this.clear();p=h.projectScene(G,W,this.sortElements);S=z=t=0;if(Q=G.lights.length>0){B=G.lights;j.setRGB(0,0,0);n.setRGB(0,0,0);o.setRGB(0,0,0);J=0;for(O=B.length;J<O;J++){H=B[J];M=H.color;if(H instanceof THREE.AmbientLight){j.r+=M.r;j.g+=M.g;j.b+=M.b}else if(H instanceof THREE.DirectionalLight){n.r+=M.r;n.g+=M.g;n.b+=M.b}else if(H instanceof THREE.PointLight){o.r+=M.r;o.g+=M.g;o.b+=M.b}}}J=0;for(O=p.length;J<O;J++){B=p[J];A.empty();if(B instanceof THREE.RenderableParticle){w=
B;w.x*=x;w.y*=-y;H=0;for(M=B.materials.length;H<M;H++)if(F=B.materials[H]){U=w;V=B;F=F;var N=z++;if(r[N]==null){r[N]=document.createElementNS("http://www.w3.org/2000/svg","circle");I==0&&r[N].setAttribute("shape-rendering","crispEdges")}s=r[N];s.setAttribute("cx",U.x);s.setAttribute("cy",U.y);s.setAttribute("r",V.scale.x*x);if(F instanceof THREE.ParticleCircleMaterial){if(Q){e.r=j.r+n.r+o.r;e.g=j.g+n.g+o.g;e.b=j.b+n.b+o.b;K.r=F.color.r*e.r;K.g=F.color.g*e.g;K.b=F.color.b*e.b;K.updateStyleString()}else K=
F.color;s.setAttribute("style","fill: "+K.__styleString)}b.appendChild(s)}}else if(B instanceof THREE.RenderableLine){w=B.v1;v=B.v2;w.positionScreen.x*=x;w.positionScreen.y*=-y;v.positionScreen.x*=x;v.positionScreen.y*=-y;A.addPoint(w.positionScreen.x,w.positionScreen.y);A.addPoint(v.positionScreen.x,v.positionScreen.y);if(R.instersects(A)){H=0;for(M=B.materials.length;H<M;)if(F=B.materials[H++]){U=w;V=v;F=F;N=S++;if(u[N]==null){u[N]=document.createElementNS("http://www.w3.org/2000/svg","line");I==
0&&u[N].setAttribute("shape-rendering","crispEdges")}s=u[N];s.setAttribute("x1",U.positionScreen.x);s.setAttribute("y1",U.positionScreen.y);s.setAttribute("x2",V.positionScreen.x);s.setAttribute("y2",V.positionScreen.y);if(F instanceof THREE.LineBasicMaterial){K.__styleString=F.color.__styleString;s.setAttribute("style","fill: none; stroke: "+K.__styleString+"; stroke-width: "+F.linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.linecap+"; stroke-linejoin: "+F.linejoin);b.appendChild(s)}}}}else if(B instanceof
THREE.RenderableFace3){w=B.v1;v=B.v2;E=B.v3;w.positionScreen.x*=x;w.positionScreen.y*=-y;v.positionScreen.x*=x;v.positionScreen.y*=-y;E.positionScreen.x*=x;E.positionScreen.y*=-y;A.addPoint(w.positionScreen.x,w.positionScreen.y);A.addPoint(v.positionScreen.x,v.positionScreen.y);A.addPoint(E.positionScreen.x,E.positionScreen.y);if(R.instersects(A)){H=0;for(M=B.meshMaterials.length;H<M;){F=B.meshMaterials[H++];if(F instanceof THREE.MeshFaceMaterial){U=0;for(V=B.faceMaterials.length;U<V;)(F=B.faceMaterials[U++])&&
c(w,v,E,B,F,G)}else F&&c(w,v,E,B,F,G)}}}else if(B instanceof THREE.RenderableFace4){w=B.v1;v=B.v2;E=B.v3;L=B.v4;w.positionScreen.x*=x;w.positionScreen.y*=-y;v.positionScreen.x*=x;v.positionScreen.y*=-y;E.positionScreen.x*=x;E.positionScreen.y*=-y;L.positionScreen.x*=x;L.positionScreen.y*=-y;A.addPoint(w.positionScreen.x,w.positionScreen.y);A.addPoint(v.positionScreen.x,v.positionScreen.y);A.addPoint(E.positionScreen.x,E.positionScreen.y);A.addPoint(L.positionScreen.x,L.positionScreen.y);if(R.instersects(A)){H=
0;for(M=B.meshMaterials.length;H<M;){F=B.meshMaterials[H++];if(F instanceof THREE.MeshFaceMaterial){U=0;for(V=B.faceMaterials.length;U<V;)(F=B.faceMaterials[U++])&&d(w,v,E,L,B,F,G)}else F&&d(w,v,E,L,B,F,G)}}}}}};
THREE.WebGLRenderer=function(a){function c(e,j){e.fragment_shader=j.fragment_shader;e.vertex_shader=j.vertex_shader;e.uniforms=Uniforms.clone(j.uniforms)}function d(e,j){e.uniforms.color.value.setRGB(e.color.r*e.opacity,e.color.g*e.opacity,e.color.b*e.opacity);e.uniforms.opacity.value=e.opacity;e.uniforms.map.texture=e.map;e.uniforms.env_map.texture=e.env_map;e.uniforms.reflectivity.value=e.reflectivity;e.uniforms.refraction_ratio.value=e.refraction_ratio;e.uniforms.combine.value=e.combine;e.uniforms.useRefract.value=
e.env_map&&e.env_map.mapping instanceof THREE.CubeRefractionMapping;if(j){e.uniforms.fogColor.value.setHex(j.color.hex);if(j instanceof THREE.Fog){e.uniforms.fogNear.value=j.near;e.uniforms.fogFar.value=j.far}else if(j instanceof THREE.FogExp2)e.uniforms.fogDensity.value=j.density}}function f(e,j){e.uniforms.color.value.setRGB(e.color.r*e.opacity,e.color.g*e.opacity,e.color.b*e.opacity);e.uniforms.opacity.value=e.opacity;if(j){e.uniforms.fogColor.value.setHex(j.color.hex);if(j instanceof THREE.Fog){e.uniforms.fogNear.value=
j.near;e.uniforms.fogFar.value=j.far}else if(j instanceof THREE.FogExp2)e.uniforms.fogDensity.value=j.density}}function g(e,j){var n;if(e=="fragment")n=b.createShader(b.FRAGMENT_SHADER);else if(e=="vertex")n=b.createShader(b.VERTEX_SHADER);b.shaderSource(n,j);b.compileShader(n);if(!b.getShaderParameter(n,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(n));return null}return n}function p(e){switch(e){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;
case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;
case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}var h=document.createElement("canvas"),b,i=null,k=null,x=new THREE.Matrix4,y,w=new Float32Array(16),v=new Float32Array(16),E=new Float32Array(16),L=new Float32Array(9),
R=new Float32Array(16),A=true,Q=new THREE.Color(0),K=0;if(a){if(a.antialias!==undefined)A=a.antialias;a.clearColor!==undefined&&Q.setHex(a.clearColor);if(a.clearAlpha!==undefined)K=a.clearAlpha}this.domElement=h;this.autoClear=true;(function(e,j,n){try{b=h.getContext("experimental-webgl",{antialias:e})}catch(o){}if(!b){alert("WebGL not supported");throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);b.frontFace(b.CCW);b.cullFace(b.BACK);
b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(j.r,j.g,j.b,n)})(A,Q,K);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(e,j){h.width=e;h.height=j;b.viewport(0,0,h.width,h.height)};this.setClearColor=function(e,j){var n=new THREE.Color(e);b.clearColor(n.r,n.g,n.b,j)};this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT)};this.setupLights=
function(e,j){var n,o,q,m=0,l=0,r=0,u,s,t,z=this.lights,S=z.directional.colors,I=z.directional.positions,G=z.point.colors,W=z.point.positions,J=0,O=0;n=0;for(o=j.length;n<o;n++){q=j[n];u=q.color;s=q.position;t=q.intensity;if(q instanceof THREE.AmbientLight){m+=u.r;l+=u.g;r+=u.b}else if(q instanceof THREE.DirectionalLight){S[J*3]=u.r*t;S[J*3+1]=u.g*t;S[J*3+2]=u.b*t;I[J*3]=s.x;I[J*3+1]=s.y;I[J*3+2]=s.z;J+=1}else if(q instanceof THREE.PointLight){G[O*3]=u.r*t;G[O*3+1]=u.g*t;G[O*3+2]=u.b*t;W[O*3]=s.x;
W[O*3+1]=s.y;W[O*3+2]=s.z;O+=1}}z.point.length=O;z.directional.length=J;z.ambient[0]=m;z.ambient[1]=l;z.ambient[2]=r};this.createParticleBuffers=function(e){e.__webGLVertexBuffer=b.createBuffer();e.__webGLFaceBuffer=b.createBuffer()};this.createLineBuffers=function(e){e.__webGLVertexBuffer=b.createBuffer();e.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=function(e){e.__webGLVertexBuffer=b.createBuffer();e.__webGLNormalBuffer=b.createBuffer();e.__webGLTangentBuffer=b.createBuffer();e.__webGLUVBuffer=
b.createBuffer();e.__webGLFaceBuffer=b.createBuffer();e.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(e){var j=e.vertices.length;e.__vertexArray=new Float32Array(j*3);e.__lineArray=new Uint16Array(j);e.__webGLLineCount=j};this.initMeshBuffers=function(e,j){var n,o,q=0,m=0,l=0,r=j.geometry.faces,u=e.faces;n=0;for(o=u.length;n<o;n++){fi=u[n];face=r[fi];if(face instanceof THREE.Face3){q+=3;m+=1;l+=3}else if(face instanceof THREE.Face4){q+=4;m+=2;l+=4}}e.__vertexArray=new Float32Array(q*
3);e.__normalArray=new Float32Array(q*3);e.__tangentArray=new Float32Array(q*4);e.__uvArray=new Float32Array(q*2);e.__faceArray=new Uint16Array(m*3);e.__lineArray=new Uint16Array(l*2);q=false;n=0;for(o=j.materials.length;n<o;n++){r=j.materials[n];if(r instanceof THREE.MeshFaceMaterial){r=0;for(u=e.materials.length;r<u;r++)if(e.materials[r]&&e.materials[r].shading!=undefined&&e.materials[r].shading==THREE.SmoothShading){q=true;break}}else if(r&&r.shading!=undefined&&r.shading==THREE.SmoothShading){q=
true;break}if(q)break}e.__needsSmoothNormals=q;e.__webGLFaceCount=m*3;e.__webGLLineCount=l*2};this.setMeshBuffers=function(e,j,n,o,q,m,l,r){var u,s,t,z,S,I,G,W,J,O=0,H=0,M=0,U=0,V=0,B=0,F=0,N=e.__vertexArray,aa=e.__uvArray,ca=e.__normalArray,Z=e.__tangentArray,ja=e.__faceArray,Y=e.__lineArray,qa=e.__needsSmoothNormals,ka=j.geometry,fa=ka.vertices,ha=e.faces,sa=ka.faces,ua=ka.uvs;j=0;for(u=ha.length;j<u;j++){s=ha[j];t=sa[s];s=ua[s];z=t.vertexNormals;S=t.normal;if(t instanceof THREE.Face3){if(o){I=
fa[t.a].position;G=fa[t.b].position;W=fa[t.c].position;N[H]=I.x;N[H+1]=I.y;N[H+2]=I.z;N[H+3]=G.x;N[H+4]=G.y;N[H+5]=G.z;N[H+6]=W.x;N[H+7]=W.y;N[H+8]=W.z;H+=9}if(r&&ka.hasTangents){I=fa[t.a].tangent;G=fa[t.b].tangent;W=fa[t.c].tangent;Z[B]=I.x;Z[B+1]=I.y;Z[B+2]=I.z;Z[B+3]=I.w;Z[B+4]=G.x;Z[B+5]=G.y;Z[B+6]=G.z;Z[B+7]=G.w;Z[B+8]=W.x;Z[B+9]=W.y;Z[B+10]=W.z;Z[B+11]=W.w;B+=12}if(l)if(z.length==3&&qa)for(t=0;t<3;t++){S=z[t];ca[V]=S.x;ca[V+1]=S.y;ca[V+2]=S.z;V+=3}else for(t=0;t<3;t++){ca[V]=S.x;ca[V+1]=S.y;
ca[V+2]=S.z;V+=3}if(m&&s)for(t=0;t<3;t++){z=s[t];aa[M]=z.u;aa[M+1]=z.v;M+=2}if(q){ja[U]=O;ja[U+1]=O+1;ja[U+2]=O+2;U+=3;Y[F]=O;Y[F+1]=O+1;Y[F+2]=O;Y[F+3]=O+2;Y[F+4]=O+1;Y[F+5]=O+2;F+=6;O+=3}}else if(t instanceof THREE.Face4){if(o){I=fa[t.a].position;G=fa[t.b].position;W=fa[t.c].position;J=fa[t.d].position;N[H]=I.x;N[H+1]=I.y;N[H+2]=I.z;N[H+3]=G.x;N[H+4]=G.y;N[H+5]=G.z;N[H+6]=W.x;N[H+7]=W.y;N[H+8]=W.z;N[H+9]=J.x;N[H+10]=J.y;N[H+11]=J.z;H+=12}if(r&&ka.hasTangents){I=fa[t.a].tangent;G=fa[t.b].tangent;
W=fa[t.c].tangent;t=fa[t.d].tangent;Z[B]=I.x;Z[B+1]=I.y;Z[B+2]=I.z;Z[B+3]=I.w;Z[B+4]=G.x;Z[B+5]=G.y;Z[B+6]=G.z;Z[B+7]=G.w;Z[B+8]=W.x;Z[B+9]=W.y;Z[B+10]=W.z;Z[B+11]=W.w;Z[B+12]=t.x;Z[B+13]=t.y;Z[B+14]=t.z;Z[B+15]=t.w;B+=16}if(l)if(z.length==4&&qa)for(t=0;t<4;t++){S=z[t];ca[V]=S.x;ca[V+1]=S.y;ca[V+2]=S.z;V+=3}else for(t=0;t<4;t++){ca[V]=S.x;ca[V+1]=S.y;ca[V+2]=S.z;V+=3}if(m&&s)for(t=0;t<4;t++){z=s[t];aa[M]=z.u;aa[M+1]=z.v;M+=2}if(q){ja[U]=O;ja[U+1]=O+1;ja[U+2]=O+2;ja[U+3]=O;ja[U+4]=O+2;ja[U+5]=O+3;
U+=6;Y[F]=O;Y[F+1]=O+1;Y[F+2]=O;Y[F+3]=O+3;Y[F+4]=O+1;Y[F+5]=O+2;Y[F+6]=O+2;Y[F+7]=O+3;F+=8;O+=4}}}if(o){b.bindBuffer(b.ARRAY_BUFFER,e.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,N,n)}if(l){b.bindBuffer(b.ARRAY_BUFFER,e.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,ca,n)}if(r&&ka.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,e.__webGLTangentBuffer);b.bufferData(b.ARRAY_BUFFER,Z,n)}if(m&&M>0){b.bindBuffer(b.ARRAY_BUFFER,e.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,aa,n)}if(q){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
e.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,ja,n);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,Y,n)}};this.setLineBuffers=function(e,j,n,o){var q,m,l=e.vertices,r=l.length,u=e.__vertexArray,s=e.__lineArray;if(n)for(n=0;n<r;n++){q=l[n].position;m=n*3;u[m]=q.x;u[m+1]=q.y;u[m+2]=q.z}if(o)for(n=0;n<r;n++)s[n]=n;b.bindBuffer(b.ARRAY_BUFFER,e.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,u,j);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e.__webGLLineBuffer);
b.bufferData(b.ELEMENT_ARRAY_BUFFER,s,j)};this.setParticleBuffers=function(){};this.renderBuffer=function(e,j,n,o,q,m){var l,r,u,s;if(!o.program){if(o instanceof THREE.MeshDepthMaterial){c(o,THREE.ShaderLib.depth);o.uniforms.mNear.value=e.near;o.uniforms.mFar.value=e.far}else if(o instanceof THREE.MeshNormalMaterial)c(o,THREE.ShaderLib.normal);else if(o instanceof THREE.MeshBasicMaterial){c(o,THREE.ShaderLib.basic);d(o,n)}else if(o instanceof THREE.MeshLambertMaterial){c(o,THREE.ShaderLib.lambert);
d(o,n)}else if(o instanceof THREE.MeshPhongMaterial){c(o,THREE.ShaderLib.phong);d(o,n)}else if(o instanceof THREE.LineBasicMaterial){c(o,THREE.ShaderLib.basic);f(o,n)}var t,z,S;t=s=r=0;for(z=j.length;t<z;t++){S=j[t];S instanceof THREE.DirectionalLight&&s++;S instanceof THREE.PointLight&&r++}if(r+s<=4){t=s;r=r}else{t=Math.ceil(4*s/(r+s));r=4-t}r={directional:t,point:r};s={fog:n,map:o.map,env_map:o.env_map,maxDirLights:r.directional,maxPointLights:r.point};r=o.fragment_shader;t=o.vertex_shader;z=b.createProgram();
S=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,s.fog?"#define USE_FOG":"",s.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");s=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,
s.map?"#define USE_MAP":"",s.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");b.attachShader(z,g("fragment",S+r));b.attachShader(z,g("vertex",s+t));b.linkProgram(z);b.getProgramParameter(z,b.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+
b.getProgramParameter(z,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");z.uniforms={};z.attributes={};o.program=z;r=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(l in o.uniforms)r.push(l);l=o.program;t=0;for(z=r.length;t<z;t++){S=r[t];l.uniforms[S]=b.getUniformLocation(l,S)}l=o.program;r=["position","normal","uv","tangent"];t=0;for(z=r.length;t<z;t++){S=r[t];l.attributes[S]=b.getAttribLocation(l,S)}}l=o.program;if(l!=i){b.useProgram(l);
i=l}this.loadCamera(l,e);this.loadMatrices(l);if(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial){this.setupLights(l,j);e=this.lights;o.uniforms.enableLighting.value=e.directional.length+e.point.length;o.uniforms.ambientLightColor.value=e.ambient;o.uniforms.directionalLightColor.value=e.directional.colors;o.uniforms.directionalLightDirection.value=e.directional.positions;o.uniforms.pointLightColor.value=e.point.colors;o.uniforms.pointLightPosition.value=e.point.positions}if(o instanceof
THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial)d(o,n);o instanceof THREE.LineBasicMaterial&&f(o,n);if(o instanceof THREE.MeshPhongMaterial){o.uniforms.ambient.value.setRGB(o.ambient.r,o.ambient.g,o.ambient.b);o.uniforms.specular.value.setRGB(o.specular.r,o.specular.g,o.specular.b);o.uniforms.shininess.value=o.shininess}n=o.uniforms;for(u in n)if(t=l.uniforms[u]){j=n[u];r=j.type;e=j.value;if(r=="i")b.uniform1i(t,e);else if(r=="f")b.uniform1f(t,
e);else if(r=="fv1")b.uniform1fv(t,e);else if(r=="fv")b.uniform3fv(t,e);else if(r=="v2")b.uniform2f(t,e.x,e.y);else if(r=="v3")b.uniform3f(t,e.x,e.y,e.z);else if(r=="c")b.uniform3f(t,e.r,e.g,e.b);else if(r=="t"){b.uniform1i(t,e);if(j=j.texture)if(j.image instanceof Array&&j.image.length==6){j=j;e=e;if(j.image.length==6){if(!j.image.__webGLTextureCube&&!j.image.__cubeMapInitialized&&j.image.loadCount==6){j.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,j.image.__webGLTextureCube);
b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(r=0;r<6;++r)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,j.image[r]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);j.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+
e);b.bindTexture(b.TEXTURE_CUBE_MAP,j.image.__webGLTextureCube)}}else{j=j;e=e;if(!j.__webGLTexture&&j.image.loaded){j.__webGLTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,j.__webGLTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,j.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,p(j.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,p(j.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,p(j.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,p(j.min_filter));
b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+e);b.bindTexture(b.TEXTURE_2D,j.__webGLTexture)}}}u=l.attributes;b.bindBuffer(b.ARRAY_BUFFER,q.__webGLVertexBuffer);b.vertexAttribPointer(u.position,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(u.position);if(u.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,q.__webGLNormalBuffer);b.vertexAttribPointer(u.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(u.normal)}if(u.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,q.__webGLTangentBuffer);
b.vertexAttribPointer(u.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(u.tangent)}if(u.uv>=0)if(q.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,q.__webGLUVBuffer);b.vertexAttribPointer(u.uv,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(u.uv)}else b.disableVertexAttribArray(u.uv);if(o.wireframe||o instanceof THREE.LineBasicMaterial){u=o.wireframe_linewidth!==undefined?o.wireframe_linewidth:o.linewidth!==undefined?o.linewidth:1;o=o instanceof THREE.LineBasicMaterial&&m.type==THREE.LineStrip?
b.LINE_STRIP:b.LINES;b.lineWidth(u);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,q.__webGLLineBuffer);b.drawElements(o,q.__webGLLineCount,b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,q.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,q.__webGLFaceCount,b.UNSIGNED_SHORT,0)}};this.renderPass=function(e,j,n,o,q,m,l){var r,u,s,t,z;s=0;for(t=o.materials.length;s<t;s++){r=o.materials[s];if(r instanceof THREE.MeshFaceMaterial){r=0;for(u=q.materials.length;r<u;r++)if((z=q.materials[r])&&z.blending==m&&
z.opacity<1==l){this.setBlending(z.blending);this.renderBuffer(e,j,n,z,q,o)}}else if((z=r)&&z.blending==m&&z.opacity<1==l){this.setBlending(z.blending);this.renderBuffer(e,j,n,z,q,o)}}};this.render=function(e,j,n,o){var q,m,l,r=e.lights,u=e.fog;this.initWebGLObjects(e);o=o!==undefined?o:true;if(n&&!n.__webGLFramebuffer){n.__webGLFramebuffer=b.createFramebuffer();n.__webGLRenderbuffer=b.createRenderbuffer();n.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,n.__webGLRenderbuffer);
b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,n.width,n.height);b.bindTexture(b.TEXTURE_2D,n.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,p(n.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,p(n.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,p(n.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,p(n.min_filter));b.texImage2D(b.TEXTURE_2D,0,p(n.format),n.width,n.height,0,p(n.format),p(n.type),null);b.bindFramebuffer(b.FRAMEBUFFER,n.__webGLFramebuffer);
b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,n.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,n.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,null);b.bindRenderbuffer(b.RENDERBUFFER,null);b.bindFramebuffer(b.FRAMEBUFFER,null)}if(n){q=n.__webGLFramebuffer;l=n.width;m=n.height}else{q=null;l=h.width;m=h.height}if(q!=k){b.bindFramebuffer(b.FRAMEBUFFER,q);b.viewport(0,0,l,m);o&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);k=q}this.autoClear&&
this.clear();j.autoUpdateMatrix&&j.updateMatrix();w.set(j.matrix.flatten());E.set(j.projectionMatrix.flatten());o=0;for(q=e.__webGLObjects.length;o<q;o++){m=e.__webGLObjects[o];l=m.object;m=m.buffer;if(l.visible){this.setupMatrices(l,j);this.renderPass(j,r,u,l,m,THREE.NormalBlending,false)}}o=0;for(q=e.__webGLObjects.length;o<q;o++){m=e.__webGLObjects[o];l=m.object;m=m.buffer;if(l.visible){this.setupMatrices(l,j);if(l.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);l.flipSided?b.frontFace(b.CW):
b.frontFace(b.CCW)}this.renderPass(j,r,u,l,m,THREE.AdditiveBlending,false);this.renderPass(j,r,u,l,m,THREE.SubtractiveBlending,false);this.renderPass(j,r,u,l,m,THREE.AdditiveBlending,true);this.renderPass(j,r,u,l,m,THREE.SubtractiveBlending,true);this.renderPass(j,r,u,l,m,THREE.NormalBlending,true)}}if(n&&n.min_filter!==THREE.NearestFilter&&n.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,n.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}};this.initWebGLObjects=
function(e){function j(s,t,z,S){if(s[t]==undefined){e.__webGLObjects.push({buffer:z,object:S});s[t]=1}}var n,o,q,m,l,r,u;if(!e.__webGLObjects){e.__webGLObjects=[];e.__webGLObjectsMap={}}n=0;for(o=e.objects.length;n<o;n++){q=e.objects[n];l=q.geometry;if(e.__webGLObjectsMap[q.id]==undefined)e.__webGLObjectsMap[q.id]={};u=e.__webGLObjectsMap[q.id];if(q instanceof THREE.Mesh){for(m in l.geometryChunks){r=l.geometryChunks[m];if(!r.__webGLVertexBuffer){this.createMeshBuffers(r);this.initMeshBuffers(r,q);
l.__dirtyVertices=true;l.__dirtyElements=true;l.__dirtyUvs=true;l.__dirtyNormals=true;l.__dirtyTangents=true}if(l.__dirtyVertices||l.__dirtyElements||l.__dirtyUvs)this.setMeshBuffers(r,q,b.DYNAMIC_DRAW,l.__dirtyVertices,l.__dirtyElements,l.__dirtyUvs,l.__dirtyNormals,l.__dirtyTangents);j(u,m,r,q)}l.__dirtyVertices=false;l.__dirtyElements=false;l.__dirtyUvs=false;l.__dirtyNormals=false;l.__dirtyTangents=false}else if(q instanceof THREE.Line){if(!l.__webGLVertexBuffer){this.createLineBuffers(l);this.initLineBuffers(l);
l.__dirtyVertices=true;l.__dirtyElements=true}l.__dirtyVertices&&this.setLineBuffers(l,b.DYNAMIC_DRAW,l.__dirtyVertices,l.__dirtyElements);j(u,0,l,q);l.__dirtyVertices=false;l.__dirtyElements=false}else if(q instanceof THREE.ParticleSystem){l.__webGLVertexBuffer||this.createParticleBuffers(l);j(u,0,l,q)}}};this.removeObject=function(e,j){var n,o;for(n=e.__webGLObjects.length-1;n>=0;n--){o=e.__webGLObjects[n].object;j==o&&e.__webGLObjects.splice(n,1)}};this.setupMatrices=function(e,j){e.autoUpdateMatrix&&
e.updateMatrix();x.multiply(j.matrix,e.matrix);v.set(x.flatten());y=THREE.Matrix4.makeInvert3x3(x).transpose();L.set(y.m);R.set(e.matrix.flatten())};this.loadMatrices=function(e){b.uniformMatrix4fv(e.uniforms.viewMatrix,false,w);b.uniformMatrix4fv(e.uniforms.modelViewMatrix,false,v);b.uniformMatrix4fv(e.uniforms.projectionMatrix,false,E);b.uniformMatrix3fv(e.uniforms.normalMatrix,false,L);b.uniformMatrix4fv(e.uniforms.objectMatrix,false,R)};this.loadCamera=function(e,j){b.uniform3f(e.uniforms.cameraPosition,
j.position.x,j.position.y,j.position.z)};this.setBlending=function(e){switch(e){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(e,j){if(e){!j||j=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);if(e=="back")b.cullFace(b.BACK);else e=="front"?b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);
b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
