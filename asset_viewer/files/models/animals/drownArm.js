// Converted from: ../files/srcModels/01_black_soup/drowning_arms/drownArm_C_v002/obj/drownArm_C_001.obj
//  vertices: 320
//  faces: 636
//  normals: 0
//  colors: 1
//  uvs: 425
//  materials: 1
//  edges: 0
//
//  Generated with OBJ -> Three.js converter
//  http://github.com/alteredq/three.js/blob/master/utils/exporters/convert_obj_three.py


var model = {

    "version" : 2,
    
    "scale" : 1.000000,

    "materials": [	{
	"DbgColor" : 15658734,
	"DbgIndex" : 0,
	"DbgName" : "comp_armHand_rig:armHand_0005_blinn1SG",
	"colorAmbient" : [0.0, 0.0, 0.0],
	"colorDiffuse" : [0.20000000000000001, 0.20000000000000001, 0.20000000000000001],
	"colorSpecular" : [0.40000000000000002, 0.40000000000000002, 0.20000000000000001],
	"illumination" : 4,
	"opticalDensity" : 1.0,
	"vertexColors" : "face"
	}],

    "vertices": [],
    
    "morphTargets": [
	{ "name": "drownArm_C_001", "vertices": [] },
	{ "name": "drownArm_C_002", "vertices": [] },
	{ "name": "drownArm_C_003", "vertices": [] },
	{ "name": "drownArm_C_004", "vertices": [] },
	{ "name": "drownArm_C_005", "vertices": [] },
	{ "name": "drownArm_C_006", "vertices": [] },
	{ "name": "drownArm_C_007", "vertices": [] },
	{ "name": "drownArm_C_008", "vertices": [] },
	{ "name": "drownArm_C_009", "vertices": [] },
	{ "name": "drownArm_C_010", "vertices": [] },
	{ "name": "drownArm_C_011", "vertices": [] },
	{ "name": "drownArm_C_012", "vertices": [] },
	{ "name": "drownArm_C_013", "vertices": [] },
	{ "name": "drownArm_C_014", "vertices": [] },
	{ "name": "drownArm_C_015", "vertices": [] },
	{ "name": "drownArm_C_016", "vertices": [] },
	{ "name": "drownArm_C_017", "vertices": [] },
	{ "name": "drownArm_C_018", "vertices": [] },
	{ "name": "drownArm_C_019", "vertices": [] },
	{ "name": "drownArm_C_020", "vertices": [] },
	{ "name": "drownArm_C_021", "vertices": [] },
	{ "name": "drownArm_C_022", "vertices": [] },
	{ "name": "drownArm_C_023", "vertices": [] },
	{ "name": "drownArm_C_024", "vertices": [] },
	{ "name": "drownArm_C_025", "vertices": [] },
	{ "name": "drownArm_C_026", "vertices": [] },
	{ "name": "drownArm_C_027", "vertices": [] },
	{ "name": "drownArm_C_028", "vertices": [] },
	{ "name": "drownArm_C_029", "vertices": [] },
	{ "name": "drownArm_C_030", "vertices": [] }
	],

    "morphColors": [],

    "normals": [],

    "colors": [3355443],

    "uvs": [[0.161556,0.596613,0.693166,0.952783,0.684274,0.938902,0.185353,0.617160,0.164859,0.603226,0.189896,0.608357,0.167435,0.599580,0.168904,0.595718,0.194563,0.599864,0.702992,0.965694,0.228731,0.612568,0.749417,0.943710,0.220943,0.625676,0.238753,0.639184,0.248789,0.621277,0.252249,0.602873,0.216245,0.634487,0.736867,0.927951,0.723190,0.908930,0.760792,0.913902,0.207036,0.653957,0.291200,0.707699,0.260558,0.677373,0.254241,0.704305,0.240027,0.737993,0.217433,0.698461,0.197984,0.723574,0.219918,0.674530,0.225060,0.655476,0.267948,0.649601,0.299300,0.659866,0.273706,0.624899,0.414303,0.676722,0.417474,0.639162,0.410274,0.743294,0.073310,0.331388,0.446750,0.742870,0.069771,0.279635,0.059664,0.234086,0.458834,0.678748,0.465995,0.622763,0.875558,0.904840,0.329319,0.636372,0.827116,0.921543,0.802920,0.923512,0.785697,0.897085,0.797450,0.846363,0.764356,0.867830,0.758313,0.839053,0.727532,0.849684,0.739239,0.876715,0.704197,0.881694,0.191840,0.675877,0.625277,0.903094,0.138134,0.667718,0.693601,0.858818,0.616949,0.883710,0.563533,0.904076,0.098339,0.664780,0.124165,0.707893,0.101174,0.669268,0.137403,0.682058,0.100474,0.675071,0.685265,0.837138,0.713920,0.824370,0.179515,0.709460,0.188791,0.694425,0.195065,0.739352,0.710227,0.805728,0.747018,0.806810,0.798285,0.798513,0.849309,0.784052,0.787382,0.755137,0.746700,0.743684,0.748637,0.772207,0.180060,0.805179,0.710158,0.776217,0.819022,0.709714,0.794592,0.704415,0.812978,0.672886,0.272086,0.919256,0.277336,0.903039,0.266729,0.893050,0.763241,0.714491,0.723831,0.706400,0.240303,0.889561,0.207701,0.884223,0.042334,0.480022,0.712606,0.727803,0.925738,0.813617,0.968268,0.809108,0.924727,0.762752,0.658394,0.781847,0.155526,0.732094,0.153008,0.802468,0.084665,0.793702,0.554713,0.795644,0.495809,0.793203,0.047198,0.762601,0.090817,0.781162,0.054318,0.768805,0.055634,0.762795,0.054853,0.756578,0.052980,0.752864,0.087999,0.735464,0.092797,0.747148,0.154529,0.783064,0.095294,0.764638,0.191170,0.798143,0.202284,0.770339,0.160166,0.770863,0.160903,0.746745,0.282359,0.824629,0.222470,0.805701,0.189204,0.811718,0.171774,0.821425,0.164922,0.850404,0.192330,0.843241,0.241666,0.834860,0.335288,0.822941,0.205437,0.864985,0.242632,0.868214,0.281514,0.869192,0.090635,0.833504,0.101213,0.854360,0.090580,0.866158,0.095394,0.881200,0.171433,0.867826,0.171824,0.884118,0.676510,0.716926,0.587813,0.684046,0.093799,0.818273,0.523051,0.674783,0.522439,0.687054,0.056823,0.843950,0.681790,0.697818,0.298599,0.884609,0.287317,0.923558,0.313210,0.899484,0.251132,0.945265,0.771088,0.671571,0.717076,0.638758,0.724024,0.632447,0.781221,0.657947,0.719693,0.624717,0.218602,0.980375,0.730405,0.621241,0.069809,0.400997,0.076144,0.380355,0.104247,0.444167,0.348564,0.880830,0.106423,0.482263,0.130060,0.521394,0.361164,0.082301,0.380005,0.136562,0.333836,0.223117,0.131041,0.245180,0.318956,0.313973,0.302552,0.377796,0.297647,0.439080,0.418786,0.381301,0.430868,0.312470,0.122184,0.326686,0.442965,0.235927,0.443813,0.180906,0.130103,0.278750,0.416298,0.503627,0.413175,0.460009,0.414406,0.421522,0.107997,0.409465,0.331587,0.530753,0.115837,0.375962,0.434754,0.890723,0.431200,0.862714,0.404338,0.817974,0.437981,0.817042,0.057216,0.422490,0.052414,0.437337,0.057284,0.851347,0.064908,0.409910,0.523568,0.663390,0.055985,0.858342,0.132003,0.696285,0.099067,0.680262,0.970206,0.741160,0.134233,0.182826,0.170539,0.722412,0.685732,0.678089,0.160701,0.809768,0.194677,0.590069,0.201151,0.642559,0.177930,0.623987,0.228556,0.599704,0.609657,0.863534,0.188493,0.659544,0.552681,0.778965,0.658516,0.756931,0.707383,0.743129,0.663029,0.804802,0.181947,0.727616,0.586242,0.703078,0.558267,0.813104,0.588952,0.667144,0.731406,0.683945,0.938736,0.727777,0.468055,0.950098,0.211359,0.982741,0.801214,0.678180,0.210612,0.971873,0.180336,0.806047,0.769041,0.689522,0.802260,0.687786,0.182463,0.725836,0.135508,0.654130,0.207386,0.658629,0.777784,0.933491,0.276336,0.603652,0.743596,0.891820,0.299177,0.605924,0.349320,0.608021,0.829502,0.796388,0.046007,0.851929,0.052572,0.862734,0.052306,0.839944,0.499815,0.812713,0.498939,0.802077,0.051463,0.771903,0.092633,0.673457,0.566089,0.914304,0.657727,0.973913,0.970429,0.849849,0.934085,0.857589,0.411352,0.725482,0.260728,0.937697,0.286229,0.951916,0.793978,0.663948,0.783190,0.674226,0.752125,0.647381,0.125764,0.882434,0.627394,0.671451,0.625277,0.689394,0.622479,0.708324,0.121073,0.814877,0.562547,0.665628,0.078101,0.873743,0.561659,0.680305,0.077042,0.827025,0.560476,0.696607,0.083472,0.853143,0.281837,0.775909,0.175706,0.804743,0.699519,0.745350,0.701827,0.777123,0.702631,0.805579,0.177695,0.728337,0.177635,0.806559,0.707641,0.726307,0.202766,0.884209,0.725123,0.683139,0.718047,0.705220,0.270714,0.839589,0.708923,0.826596,0.180383,0.725239,0.721614,0.851277,0.204091,0.658789,0.733128,0.877583,0.739503,0.895251,0.205855,0.651671,0.755994,0.916720,0.247497,0.602238,0.772095,0.935540,0.701621,0.709153,0.054457,0.479144,0.172485,0.848427,0.090393,0.764410,0.543799,0.813007,0.079332,0.739771,0.537280,0.797655,0.513586,0.788753,0.061841,0.778717,0.152242,0.770102,0.613369,0.766331,0.123854,0.798729,0.611789,0.788049,0.121763,0.733779,0.610648,0.808953,0.131373,0.680917,0.602592,0.867936,0.120077,0.704413,0.607058,0.887481,0.611365,0.905728,0.126772,0.656633,0.191936,0.694868,0.170556,0.657711,0.677480,0.888938,0.663689,0.868532,0.657663,0.846774,0.153609,0.717112,0.187735,0.590681,0.692464,0.969683,0.681184,0.959927,0.174225,0.619285,0.676676,0.945485,0.185659,0.606702,0.218092,0.596728,0.735078,0.950500,0.722440,0.936149,0.712831,0.916908,0.194970,0.637615,0.224182,0.628133,0.864090,0.852067,0.282084,0.798957,0.286519,0.741804,0.295250,0.683782,0.413689,0.686873,0.823797,0.791283,0.160918,0.785693,0.157673,0.802936,0.666942,0.754551,0.671216,0.780453,0.674441,0.805026,0.161914,0.731011,0.165444,0.745762,0.145171,0.429317,0.153906,0.376336,0.162303,0.324094,0.172015,0.254044,0.173022,0.176486,0.168670,0.166459,0.165289,0.528528,0.145995,0.486923,0.803631,0.731301,0.182372,0.711643,0.690124,0.834972,0.172561,0.722993,0.700506,0.856959,0.191845,0.659381,0.710416,0.880810,0.194876,0.675731,0.387234,0.625345,0.887062,0.830072,0.232809,0.614339,0.232884,0.600283,0.754600,0.941843,0.741658,0.925138,0.727294,0.905489,0.202334,0.644851,0.217876,0.638370,0.178143,0.867265,0.176966,0.884133,0.692279,0.678928,0.689082,0.699307,0.164315,0.809083,0.683153,0.718928,0.174677,0.819809,0.240553,0.746556,0.267590,0.774433,0.227682,0.796698,0.244757,0.726784,0.275460,0.706254,0.258406,0.686550,0.262931,0.668454,0.287836,0.656112,0.272221,0.631271,0.229474,0.816340,0.234045,0.771912,0.816500,0.710596,0.845517,0.785127,0.050660,0.762681,0.120472,0.782047,0.124341,0.746961,0.125440,0.866877,0.127628,0.827997,0.081543,0.403599,0.821187,0.631077,0.812009,0.647792,0.264586,0.963347,0.287914,0.970076,0.866413,0.705883,0.361518,0.945068,0.338121,0.923878,0.384769,0.933234,0.449651,0.922449,0.446605,0.918484,0.901159,0.723597,0.437746,0.963075,0.792763,0.622679,0.791620,0.637828,0.781712,0.615220,0.727500,0.614450,0.759947,0.631020,0.269385,0.975327,0.260135,0.965698,0.250602,0.969067,0.220288,0.988718,0.262730,0.978238,0.859675,0.650488,0.321777,0.933141,0.368333,0.911620,0.842375,0.662630,0.888338,0.671156,0.301625,0.963784,0.336060,0.954646,0.358540,0.954026,0.859795,0.688091,0.458331,0.904481,0.219646,0.985544,0.726041,0.616369,0.218619,0.987601,0.179261,0.692131,0.136027,0.768546,0.144608,0.851665,0.531375,0.677145,0.569227,0.901732,0.500943,0.875895,0.163147,0.597416,0.442965,0.235927,0.430868,0.312470,0.418786,0.381301,0.414406,0.421522,0.416298,0.503627,0.443813,0.180906,0.413175,0.460009,0.414406,0.421522,0.416298,0.503627]],

    "faces": [],

    "edges" : []

};

var req = new XMLHttpRequest();
req.open('GET', "drownArm.txt", false);
req.send(null);
if (req.status == 200 || req.status == 0) {
  var numVertices = 960;
  var numMorphTargets = model.morphTargets.length;
  var scale = 0.710627375;
  model.vertices = new Float32Array(numVertices);
  for (var j = 0; j < numMorphTargets; ++j) {
    model.morphTargets[j].vertices = new Float32Array(numVertices);
  }

  var untransposed = new Int16Array(numVertices);
  var transposeOffset = numVertices / 3;
  var prevX = 0, prevY = 0, prevZ = 0;
  for (var i = 0; i < transposeOffset; ++i) {
    var x = req.responseText.charCodeAt(i);
    x = (x >> 1) ^ (-(x & 1));
    prevX += x;
    untransposed[3*i] = prevX;
    var y = req.responseText.charCodeAt(transposeOffset + i);
    y = (y >> 1) ^ (-(y & 1));
    prevY += y;
    untransposed[3*i + 1] = prevY;
    var z = req.responseText.charCodeAt(2*transposeOffset + i);
    z = (z >> 1) ^ (-(z & 1));
    prevZ += z;
    untransposed[3*i + 2] = prevZ;
  }

  for (var i = 0; i < numVertices; ++i) {
    var word = untransposed[i];
    model.vertices[i] = scale * word;

    var prev = word;
    for (var j = 0; j < numMorphTargets; ++j) {
      var offset = (j + 1) * numVertices;
      var delta = req.responseText.charCodeAt(offset + i);
      delta = (delta >> 1) ^ (-(delta & 1));
      prev += delta;
      model.morphTargets[j].vertices[i] = scale * prev;
    }
  }
  var faceOffset = numVertices * (numMorphTargets + 1);
  var numFaces = 5721;
  model.faces = new Uint16Array(numFaces);
  for (var i = 0; i < numFaces; ++i) {
    model.faces[i] = req.responseText.charCodeAt(faceOffset + i);
  }
}

postMessage( model );
close();
